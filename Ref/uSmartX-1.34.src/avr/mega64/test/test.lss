
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000828  000008bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000828  00000000  00000000  00000094  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000124  00800126  00800126  000008e2  2**0
                  ALLOC
  3 .noinit       00000000  0080024a  0080024a  000008e2  2**0
                  CONTENTS
  4 .eeprom       00000000  00810000  00810000  000008e2  2**0
                  CONTENTS
  5 .debug_aranges 00000014  00000000  00000000  000008e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000000a3  00000000  00000000  000008f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000056c  00000000  00000000  00000999  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000011f  00000000  00000000  00000f05  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000124  00000000  00000000  00001024  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000201  00000000  00000000  00001148  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c
   4:	0c 94 61 00 	jmp	0xc2
   8:	0c 94 61 00 	jmp	0xc2
   c:	0c 94 61 00 	jmp	0xc2
  10:	0c 94 61 00 	jmp	0xc2
  14:	0c 94 61 00 	jmp	0xc2
  18:	0c 94 61 00 	jmp	0xc2
  1c:	0c 94 61 00 	jmp	0xc2
  20:	0c 94 61 00 	jmp	0xc2
  24:	0c 94 61 00 	jmp	0xc2
  28:	0c 94 61 00 	jmp	0xc2
  2c:	0c 94 61 00 	jmp	0xc2
  30:	0c 94 61 00 	jmp	0xc2
  34:	0c 94 61 00 	jmp	0xc2
  38:	0c 94 61 00 	jmp	0xc2
  3c:	0c 94 61 00 	jmp	0xc2
  40:	0c 94 61 00 	jmp	0xc2
  44:	0c 94 61 00 	jmp	0xc2
  48:	0c 94 61 00 	jmp	0xc2
  4c:	0c 94 61 00 	jmp	0xc2
  50:	0c 94 61 00 	jmp	0xc2
  54:	0c 94 61 00 	jmp	0xc2
  58:	0c 94 61 00 	jmp	0xc2
  5c:	0c 94 61 00 	jmp	0xc2
  60:	0c 94 61 00 	jmp	0xc2
  64:	0c 94 61 00 	jmp	0xc2
  68:	0c 94 61 00 	jmp	0xc2
  6c:	0c 94 61 00 	jmp	0xc2
  70:	0c 94 61 00 	jmp	0xc2
  74:	0c 94 61 00 	jmp	0xc2
  78:	0c 94 61 00 	jmp	0xc2
  7c:	0c 94 61 00 	jmp	0xc2
  80:	0c 94 61 00 	jmp	0xc2
  84:	0c 94 61 00 	jmp	0xc2
  88:	0c 94 61 00 	jmp	0xc2

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e2       	ldi	r30, 0x28	; 40
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	02 c0       	rjmp	.+4      	; 0xa8

000000a4 <.do_copy_data_loop>:
  a4:	05 90       	lpm	r0, Z+
  a6:	0d 92       	st	X+, r0

000000a8 <.do_copy_data_start>:
  a8:	a6 32       	cpi	r26, 0x26	; 38
  aa:	b1 07       	cpc	r27, r17
  ac:	d9 f7       	brne	.-10     	; 0xa4

000000ae <__do_clear_bss>:
  ae:	12 e0       	ldi	r17, 0x02	; 2
  b0:	a6 e2       	ldi	r26, 0x26	; 38
  b2:	b1 e0       	ldi	r27, 0x01	; 1
  b4:	01 c0       	rjmp	.+2      	; 0xb8

000000b6 <.do_clear_bss_loop>:
  b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
  b8:	aa 34       	cpi	r26, 0x4A	; 74
  ba:	b1 07       	cpc	r27, r17
  bc:	e1 f7       	brne	.-8      	; 0xb6
  be:	0c 94 a8 00 	jmp	0x150

000000c2 <__bad_interrupt>:
  c2:	0c 94 00 00 	jmp	0x0

000000c6 <TSK1>:


MEM_HEAP_CREATE(sys_mem, 10, MEM_MB_16_BYTE);

STATUS TSK1(STATUS evt) {
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
  ce:	2a 97       	sbiw	r28, 0x0a	; 10
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	f8 94       	cli
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	0f be       	out	0x3f, r0	; 63
  d8:	cd bf       	out	0x3d, r28	; 61
  da:	20 91 26 01 	lds	r18, 0x0126
  de:	30 91 27 01 	lds	r19, 0x0127
  e2:	fe 01       	movw	r30, r28
  e4:	31 96       	adiw	r30, 0x01	; 1
  e6:	99 e0       	ldi	r25, 0x09	; 9
	static a = 0; 
	uint8 i, buff[10];
	
	for(i = 0; i < 10; i++) {
		buff[i] = a++;
  e8:	82 2f       	mov	r24, r18
  ea:	a9 01       	movw	r20, r18
  ec:	4f 5f       	subi	r20, 0xFF	; 255
  ee:	5f 4f       	sbci	r21, 0xFF	; 255
  f0:	9a 01       	movw	r18, r20
  f2:	81 93       	st	Z+, r24
  f4:	91 50       	subi	r25, 0x01	; 1
  f6:	97 ff       	sbrs	r25, 7
  f8:	f7 cf       	rjmp	.-18     	; 0xe8
  fa:	50 93 27 01 	sts	0x0127, r21
  fe:	40 93 26 01 	sts	0x0126, r20
	}
			
	return SYS_OK;
}
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	2a 96       	adiw	r28, 0x0a	; 10
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	f8 94       	cli
 10c:	de bf       	out	0x3e, r29	; 62
 10e:	0f be       	out	0x3f, r0	; 63
 110:	cd bf       	out	0x3d, r28	; 61
 112:	df 91       	pop	r29
 114:	cf 91       	pop	r28
 116:	08 95       	ret

00000118 <TSK2>:

STATUS TSK2(STATUS evt) {
	static uint8 i[] = {11,12,13,14,15,16,17,18,19,20};		
	return SYS_OK;
}
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	08 95       	ret

0000011e <TSK3>:

STATUS TSK3(STATUS evt) {
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	cd b7       	in	r28, 0x3d	; 61
 124:	de b7       	in	r29, 0x3e	; 62
 126:	2a 97       	sbiw	r28, 0x0a	; 10
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	f8 94       	cli
 12c:	de bf       	out	0x3e, r29	; 62
 12e:	0f be       	out	0x3f, r0	; 63
 130:	cd bf       	out	0x3d, r28	; 61
	uint8 buff[10];
	TMR_Stop(&TMR1);
 132:	88 e2       	ldi	r24, 0x28	; 40
 134:	91 e0       	ldi	r25, 0x01	; 1
 136:	0e 94 68 01 	call	0x2d0
	return SYS_OK;
	
}
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	2a 96       	adiw	r28, 0x0a	; 10
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	f8 94       	cli
 144:	de bf       	out	0x3e, r29	; 62
 146:	0f be       	out	0x3f, r0	; 63
 148:	cd bf       	out	0x3d, r28	; 61
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	08 95       	ret

00000150 <main>:

task_entry_t tsk_tbl[] = {	{&TSK1, &TSK1_tcb, 1},
								{&TSK2, &TSK2_tcb, 2},
								{&TSK3, &TSK3_tcb, 3},
								{0, 0}
							};
													

int main(void) {
 150:	cf ef       	ldi	r28, 0xFF	; 255
 152:	d0 e1       	ldi	r29, 0x10	; 16
 154:	de bf       	out	0x3e, r29	; 62
 156:	cd bf       	out	0x3d, r28	; 61
	void *p1, *p2, *p3;
			
	uSMARTX_Init(tsk_tbl);
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	91 e0       	ldi	r25, 0x01	; 1
 15c:	0e 94 00 02 	call	0x400
	
	p1 = MEM_Alloc(&sys_mem, 15);
 160:	6f e0       	ldi	r22, 0x0F	; 15
 162:	70 e0       	ldi	r23, 0x00	; 0
 164:	84 e1       	ldi	r24, 0x14	; 20
 166:	91 e0       	ldi	r25, 0x01	; 1
 168:	0e 94 7d 03 	call	0x6fa
 16c:	8c 01       	movw	r16, r24
	p2 = MEM_Alloc(&sys_mem, 64);
 16e:	60 e4       	ldi	r22, 0x40	; 64
 170:	70 e0       	ldi	r23, 0x00	; 0
 172:	84 e1       	ldi	r24, 0x14	; 20
 174:	91 e0       	ldi	r25, 0x01	; 1
 176:	0e 94 7d 03 	call	0x6fa
 17a:	7c 01       	movw	r14, r24
	p3 = MEM_Alloc(&sys_mem, 100);
 17c:	64 e6       	ldi	r22, 0x64	; 100
 17e:	70 e0       	ldi	r23, 0x00	; 0
 180:	84 e1       	ldi	r24, 0x14	; 20
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	0e 94 7d 03 	call	0x6fa
	MEM_Free(&sys_mem, p1);
 188:	b8 01       	movw	r22, r16
 18a:	84 e1       	ldi	r24, 0x14	; 20
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	0e 94 e4 03 	call	0x7c8
	p3 = MEM_Alloc(&sys_mem, 100);
 192:	64 e6       	ldi	r22, 0x64	; 100
 194:	70 e0       	ldi	r23, 0x00	; 0
 196:	84 e1       	ldi	r24, 0x14	; 20
 198:	91 e0       	ldi	r25, 0x01	; 1
 19a:	0e 94 7d 03 	call	0x6fa
	MEM_Free(&sys_mem, p2);
 19e:	b7 01       	movw	r22, r14
 1a0:	84 e1       	ldi	r24, 0x14	; 20
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	0e 94 e4 03 	call	0x7c8
	p3 = MEM_Alloc(&sys_mem, 100);
 1a8:	64 e6       	ldi	r22, 0x64	; 100
 1aa:	70 e0       	ldi	r23, 0x00	; 0
 1ac:	84 e1       	ldi	r24, 0x14	; 20
 1ae:	91 e0       	ldi	r25, 0x01	; 1
 1b0:	0e 94 7d 03 	call	0x6fa
	while(1) {
		uSMARTX_Tick();
 1b4:	0e 94 e1 00 	call	0x1c2
		if(uSMARTX_Scheduler() == SYS_ERROR)
 1b8:	0e 94 c5 01 	call	0x38a
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	d1 f7       	brne	.-12     	; 0x1b4
			break;
	}
	
	while(1);
 1c0:	ff cf       	rjmp	.-2      	; 0x1c0

000001c2 <uSMARTX_Tick>:
 1c2:	cf 93       	push	r28
 1c4:	df 93       	push	r29
 1c6:	c0 91 3c 02 	lds	r28, 0x023C
 1ca:	d0 91 3d 02 	lds	r29, 0x023D
 1ce:	80 91 44 02 	lds	r24, 0x0244
 1d2:	90 91 45 02 	lds	r25, 0x0245
 1d6:	a0 91 46 02 	lds	r26, 0x0246
 1da:	b0 91 47 02 	lds	r27, 0x0247
 1de:	01 96       	adiw	r24, 0x01	; 1
 1e0:	a1 1d       	adc	r26, r1
 1e2:	b1 1d       	adc	r27, r1
 1e4:	80 93 44 02 	sts	0x0244, r24
 1e8:	90 93 45 02 	sts	0x0245, r25
 1ec:	a0 93 46 02 	sts	0x0246, r26
 1f0:	b0 93 47 02 	sts	0x0247, r27
 1f4:	20 97       	sbiw	r28, 0x00	; 0
 1f6:	11 f1       	breq	.+68     	; 0x23c
 1f8:	8e 81       	ldd	r24, Y+6	; 0x06
 1fa:	9f 81       	ldd	r25, Y+7	; 0x07
 1fc:	00 97       	sbiw	r24, 0x00	; 0
 1fe:	21 f0       	breq	.+8      	; 0x208
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	8e 83       	std	Y+6, r24	; 0x06
 204:	9f 83       	std	Y+7, r25	; 0x07
 206:	1a c0       	rjmp	.+52     	; 0x23c
 208:	8c e3       	ldi	r24, 0x3C	; 60
 20a:	92 e0       	ldi	r25, 0x02	; 2
 20c:	0e 94 3c 03 	call	0x678
 210:	ec 01       	movw	r28, r24
 212:	8f 85       	ldd	r24, Y+15	; 0x0f
 214:	87 7f       	andi	r24, 0xF7	; 247
 216:	8f 87       	std	Y+15, r24	; 0x0f
 218:	e8 85       	ldd	r30, Y+8	; 0x08
 21a:	f9 85       	ldd	r31, Y+9	; 0x09
 21c:	4d 85       	ldd	r20, Y+13	; 0x0d
 21e:	5e 85       	ldd	r21, Y+14	; 0x0e
 220:	6b 85       	ldd	r22, Y+11	; 0x0b
 222:	7c 85       	ldd	r23, Y+12	; 0x0c
 224:	8a 85       	ldd	r24, Y+10	; 0x0a
 226:	09 95       	icall
 228:	c0 91 3c 02 	lds	r28, 0x023C
 22c:	d0 91 3d 02 	lds	r29, 0x023D
 230:	20 97       	sbiw	r28, 0x00	; 0
 232:	21 f0       	breq	.+8      	; 0x23c
 234:	8e 81       	ldd	r24, Y+6	; 0x06
 236:	9f 81       	ldd	r25, Y+7	; 0x07
 238:	89 2b       	or	r24, r25
 23a:	31 f3       	breq	.-52     	; 0x208
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	08 95       	ret

00000242 <TSK_Self>:
 242:	80 91 48 02 	lds	r24, 0x0248
 246:	90 91 49 02 	lds	r25, 0x0249
 24a:	08 95       	ret

0000024c <timer_dequeue>:
 24c:	cf 93       	push	r28
 24e:	df 93       	push	r29
 250:	fc 01       	movw	r30, r24
 252:	87 85       	ldd	r24, Z+15	; 0x0f
 254:	87 7f       	andi	r24, 0xF7	; 247
 256:	87 87       	std	Z+15, r24	; 0x0f
 258:	a0 81       	ld	r26, Z
 25a:	b1 81       	ldd	r27, Z+1	; 0x01
 25c:	10 97       	sbiw	r26, 0x00	; 0
 25e:	49 f0       	breq	.+18     	; 0x272
 260:	ed 01       	movw	r28, r26
 262:	8e 81       	ldd	r24, Y+6	; 0x06
 264:	9f 81       	ldd	r25, Y+7	; 0x07
 266:	26 81       	ldd	r18, Z+6	; 0x06
 268:	37 81       	ldd	r19, Z+7	; 0x07
 26a:	82 0f       	add	r24, r18
 26c:	93 1f       	adc	r25, r19
 26e:	8e 83       	std	Y+6, r24	; 0x06
 270:	9f 83       	std	Y+7, r25	; 0x07
 272:	bf 01       	movw	r22, r30
 274:	8c e3       	ldi	r24, 0x3C	; 60
 276:	92 e0       	ldi	r25, 0x02	; 2
 278:	0e 94 58 03 	call	0x6b0
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	08 95       	ret

00000282 <remove_timeout>:
 282:	fc 01       	movw	r30, r24
 284:	89 2b       	or	r24, r25
 286:	11 f0       	breq	.+4      	; 0x28c
 288:	87 85       	ldd	r24, Z+15	; 0x0f
 28a:	83 ff       	sbrs	r24, 3
 28c:	08 95       	ret
 28e:	cf 01       	movw	r24, r30
 290:	0e 94 26 01 	call	0x24c
 294:	08 95       	ret

00000296 <TSK_Suspend>:
 296:	0f 93       	push	r16
 298:	1f 93       	push	r17
 29a:	cf 93       	push	r28
 29c:	df 93       	push	r29
 29e:	ec 01       	movw	r28, r24
 2a0:	0e 94 0d 04 	call	0x81a
 2a4:	8c 01       	movw	r16, r24
 2a6:	82 e0       	ldi	r24, 0x02	; 2
 2a8:	8c 83       	std	Y+4, r24	; 0x04
 2aa:	8c 85       	ldd	r24, Y+12	; 0x0c
 2ac:	9d 85       	ldd	r25, Y+13	; 0x0d
 2ae:	00 97       	sbiw	r24, 0x00	; 0
 2b0:	39 f0       	breq	.+14     	; 0x2c0
 2b2:	be 01       	movw	r22, r28
 2b4:	0e 94 58 03 	call	0x6b0
 2b8:	ce 01       	movw	r24, r28
 2ba:	0e 96       	adiw	r24, 0x0e	; 14
 2bc:	0e 94 41 01 	call	0x282
 2c0:	c8 01       	movw	r24, r16
 2c2:	0e 94 11 04 	call	0x822
 2c6:	df 91       	pop	r29
 2c8:	cf 91       	pop	r28
 2ca:	1f 91       	pop	r17
 2cc:	0f 91       	pop	r16
 2ce:	08 95       	ret

000002d0 <TMR_Stop>:
 2d0:	0f 93       	push	r16
 2d2:	1f 93       	push	r17
 2d4:	cf 93       	push	r28
 2d6:	df 93       	push	r29
 2d8:	ec 01       	movw	r28, r24
 2da:	0e 94 0d 04 	call	0x81a
 2de:	8c 01       	movw	r16, r24
 2e0:	8f 85       	ldd	r24, Y+15	; 0x0f
 2e2:	83 ff       	sbrs	r24, 3
 2e4:	03 c0       	rjmp	.+6      	; 0x2ec
 2e6:	ce 01       	movw	r24, r28
 2e8:	0e 94 26 01 	call	0x24c
 2ec:	c8 01       	movw	r24, r16
 2ee:	0e 94 11 04 	call	0x822
 2f2:	df 91       	pop	r29
 2f4:	cf 91       	pop	r28
 2f6:	1f 91       	pop	r17
 2f8:	0f 91       	pop	r16
 2fa:	08 95       	ret

000002fc <TMR_GetTicks>:
 2fc:	80 91 44 02 	lds	r24, 0x0244
 300:	90 91 45 02 	lds	r25, 0x0245
 304:	a0 91 46 02 	lds	r26, 0x0246
 308:	b0 91 47 02 	lds	r27, 0x0247
 30c:	bc 01       	movw	r22, r24
 30e:	cd 01       	movw	r24, r26
 310:	08 95       	ret

00000312 <priority_enqueue_tsk>:
 312:	dc 01       	movw	r26, r24
 314:	fc 01       	movw	r30, r24
 316:	25 81       	ldd	r18, Z+5	; 0x05
 318:	80 91 40 02 	lds	r24, 0x0240
 31c:	90 91 41 02 	lds	r25, 0x0241
 320:	00 97       	sbiw	r24, 0x00	; 0
 322:	91 f0       	breq	.+36     	; 0x348
 324:	fc 01       	movw	r30, r24
 326:	85 81       	ldd	r24, Z+5	; 0x05
 328:	28 17       	cp	r18, r24
 32a:	50 f0       	brcs	.+20     	; 0x340
 32c:	80 81       	ld	r24, Z
 32e:	91 81       	ldd	r25, Z+1	; 0x01
 330:	00 97       	sbiw	r24, 0x00	; 0
 332:	c1 f7       	brne	.-16     	; 0x324
 334:	bd 01       	movw	r22, r26
 336:	80 e4       	ldi	r24, 0x40	; 64
 338:	92 e0       	ldi	r25, 0x02	; 2
 33a:	0e 94 1e 03 	call	0x63c
 33e:	08 95       	ret
 340:	82 81       	ldd	r24, Z+2	; 0x02
 342:	93 81       	ldd	r25, Z+3	; 0x03
 344:	89 2b       	or	r24, r25
 346:	31 f4       	brne	.+12     	; 0x354
 348:	bd 01       	movw	r22, r26
 34a:	80 e4       	ldi	r24, 0x40	; 64
 34c:	92 e0       	ldi	r25, 0x02	; 2
 34e:	0e 94 ee 02 	call	0x5dc
 352:	08 95       	ret
 354:	bd 01       	movw	r22, r26
 356:	cf 01       	movw	r24, r30
 358:	0e 94 0b 03 	call	0x616
 35c:	08 95       	ret

0000035e <TSK_Resume>:
 35e:	ef 92       	push	r14
 360:	ff 92       	push	r15
 362:	0f 93       	push	r16
 364:	1f 93       	push	r17
 366:	8c 01       	movw	r16, r24
 368:	0e 94 0d 04 	call	0x81a
 36c:	7c 01       	movw	r14, r24
 36e:	8d ef       	ldi	r24, 0xFD	; 253
 370:	f8 01       	movw	r30, r16
 372:	84 83       	std	Z+4, r24	; 0x04
 374:	c8 01       	movw	r24, r16
 376:	0e 94 89 01 	call	0x312
 37a:	c7 01       	movw	r24, r14
 37c:	0e 94 11 04 	call	0x822
 380:	1f 91       	pop	r17
 382:	0f 91       	pop	r16
 384:	ff 90       	pop	r15
 386:	ef 90       	pop	r14
 388:	08 95       	ret

0000038a <uSMARTX_Scheduler>:
 38a:	ef 92       	push	r14
 38c:	ff 92       	push	r15
 38e:	0f 93       	push	r16
 390:	1f 93       	push	r17
 392:	cf 93       	push	r28
 394:	df 93       	push	r29
 396:	0e 94 0d 04 	call	0x81a
 39a:	8c 01       	movw	r16, r24
 39c:	80 e4       	ldi	r24, 0x40	; 64
 39e:	92 e0       	ldi	r25, 0x02	; 2
 3a0:	0e 94 3c 03 	call	0x678
 3a4:	ec 01       	movw	r28, r24
 3a6:	00 97       	sbiw	r24, 0x00	; 0
 3a8:	c9 f0       	breq	.+50     	; 0x3dc
 3aa:	90 93 49 02 	sts	0x0249, r25
 3ae:	80 93 48 02 	sts	0x0248, r24
 3b2:	ee 80       	ldd	r14, Y+6	; 0x06
 3b4:	ff 80       	ldd	r15, Y+7	; 0x07
 3b6:	c8 01       	movw	r24, r16
 3b8:	0e 94 11 04 	call	0x822
 3bc:	e8 85       	ldd	r30, Y+8	; 0x08
 3be:	f9 85       	ldd	r31, Y+9	; 0x09
 3c0:	c7 01       	movw	r24, r14
 3c2:	09 95       	icall
 3c4:	7c 01       	movw	r14, r24
 3c6:	0e 94 0d 04 	call	0x81a
 3ca:	8c 01       	movw	r16, r24
 3cc:	86 e0       	ldi	r24, 0x06	; 6
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	8e 83       	std	Y+6, r24	; 0x06
 3d2:	9f 83       	std	Y+7, r25	; 0x07
 3d4:	8c 81       	ldd	r24, Y+4	; 0x04
 3d6:	88 23       	and	r24, r24
 3d8:	41 f4       	brne	.+16     	; 0x3ea
 3da:	04 c0       	rjmp	.+8      	; 0x3e4
 3dc:	82 e0       	ldi	r24, 0x02	; 2
 3de:	e8 2e       	mov	r14, r24
 3e0:	f1 2c       	mov	r15, r1
 3e2:	03 c0       	rjmp	.+6      	; 0x3ea
 3e4:	ce 01       	movw	r24, r28
 3e6:	0e 94 89 01 	call	0x312
 3ea:	c8 01       	movw	r24, r16
 3ec:	0e 94 11 04 	call	0x822
 3f0:	c7 01       	movw	r24, r14
 3f2:	df 91       	pop	r29
 3f4:	cf 91       	pop	r28
 3f6:	1f 91       	pop	r17
 3f8:	0f 91       	pop	r16
 3fa:	ff 90       	pop	r15
 3fc:	ef 90       	pop	r14
 3fe:	08 95       	ret

00000400 <uSMARTX_Init>:
 400:	1f 93       	push	r17
 402:	cf 93       	push	r28
 404:	df 93       	push	r29
 406:	ec 01       	movw	r28, r24
 408:	10 92 3d 02 	sts	0x023D, r1
 40c:	10 92 3c 02 	sts	0x023C, r1
 410:	10 92 44 02 	sts	0x0244, r1
 414:	10 92 45 02 	sts	0x0245, r1
 418:	10 92 46 02 	sts	0x0246, r1
 41c:	10 92 47 02 	sts	0x0247, r1
 420:	ea 81       	ldd	r30, Y+2	; 0x02
 422:	fb 81       	ldd	r31, Y+3	; 0x03
 424:	30 97       	sbiw	r30, 0x00	; 0
 426:	89 f0       	breq	.+34     	; 0x44a
 428:	14 e0       	ldi	r17, 0x04	; 4
 42a:	14 82       	std	Z+4, r1	; 0x04
 42c:	8c 81       	ldd	r24, Y+4	; 0x04
 42e:	85 83       	std	Z+5, r24	; 0x05
 430:	88 81       	ld	r24, Y
 432:	99 81       	ldd	r25, Y+1	; 0x01
 434:	80 87       	std	Z+8, r24	; 0x08
 436:	91 87       	std	Z+9, r25	; 0x09
 438:	15 8f       	std	Z+29, r17	; 0x1d
 43a:	cf 01       	movw	r24, r30
 43c:	0e 94 89 01 	call	0x312
 440:	25 96       	adiw	r28, 0x05	; 5
 442:	ea 81       	ldd	r30, Y+2	; 0x02
 444:	fb 81       	ldd	r31, Y+3	; 0x03
 446:	30 97       	sbiw	r30, 0x00	; 0
 448:	81 f7       	brne	.-32     	; 0x42a
 44a:	df 91       	pop	r29
 44c:	cf 91       	pop	r28
 44e:	1f 91       	pop	r17
 450:	08 95       	ret

00000452 <timer_enqueue>:
 452:	cf 93       	push	r28
 454:	df 93       	push	r29
 456:	dc 01       	movw	r26, r24
 458:	ec 01       	movw	r28, r24
 45a:	8f 85       	ldd	r24, Y+15	; 0x0f
 45c:	88 60       	ori	r24, 0x08	; 8
 45e:	8f 87       	std	Y+15, r24	; 0x0f
 460:	2c 81       	ldd	r18, Y+4	; 0x04
 462:	3d 81       	ldd	r19, Y+5	; 0x05
 464:	e0 91 3c 02 	lds	r30, 0x023C
 468:	f0 91 3d 02 	lds	r31, 0x023D
 46c:	30 97       	sbiw	r30, 0x00	; 0
 46e:	19 f1       	breq	.+70     	; 0x4b6
 470:	86 81       	ldd	r24, Z+6	; 0x06
 472:	97 81       	ldd	r25, Z+7	; 0x07
 474:	28 17       	cp	r18, r24
 476:	39 07       	cpc	r19, r25
 478:	60 f0       	brcs	.+24     	; 0x492
 47a:	28 1b       	sub	r18, r24
 47c:	39 0b       	sbc	r19, r25
 47e:	80 81       	ld	r24, Z
 480:	91 81       	ldd	r25, Z+1	; 0x01
 482:	00 97       	sbiw	r24, 0x00	; 0
 484:	09 f1       	breq	.+66     	; 0x4c8
 486:	fc 01       	movw	r30, r24
 488:	86 81       	ldd	r24, Z+6	; 0x06
 48a:	97 81       	ldd	r25, Z+7	; 0x07
 48c:	28 17       	cp	r18, r24
 48e:	39 07       	cpc	r19, r25
 490:	a0 f7       	brcc	.-24     	; 0x47a
 492:	ed 01       	movw	r28, r26
 494:	2e 83       	std	Y+6, r18	; 0x06
 496:	3f 83       	std	Y+7, r19	; 0x07
 498:	86 81       	ldd	r24, Z+6	; 0x06
 49a:	97 81       	ldd	r25, Z+7	; 0x07
 49c:	82 1b       	sub	r24, r18
 49e:	93 0b       	sbc	r25, r19
 4a0:	86 83       	std	Z+6, r24	; 0x06
 4a2:	97 83       	std	Z+7, r25	; 0x07
 4a4:	82 81       	ldd	r24, Z+2	; 0x02
 4a6:	93 81       	ldd	r25, Z+3	; 0x03
 4a8:	89 2b       	or	r24, r25
 4aa:	41 f0       	breq	.+16     	; 0x4bc
 4ac:	bd 01       	movw	r22, r26
 4ae:	cf 01       	movw	r24, r30
 4b0:	0e 94 0b 03 	call	0x616
 4b4:	11 c0       	rjmp	.+34     	; 0x4d8
 4b6:	ed 01       	movw	r28, r26
 4b8:	2e 83       	std	Y+6, r18	; 0x06
 4ba:	3f 83       	std	Y+7, r19	; 0x07
 4bc:	bd 01       	movw	r22, r26
 4be:	8c e3       	ldi	r24, 0x3C	; 60
 4c0:	92 e0       	ldi	r25, 0x02	; 2
 4c2:	0e 94 ee 02 	call	0x5dc
 4c6:	08 c0       	rjmp	.+16     	; 0x4d8
 4c8:	fd 01       	movw	r30, r26
 4ca:	26 83       	std	Z+6, r18	; 0x06
 4cc:	37 83       	std	Z+7, r19	; 0x07
 4ce:	bd 01       	movw	r22, r26
 4d0:	8c e3       	ldi	r24, 0x3C	; 60
 4d2:	92 e0       	ldi	r25, 0x02	; 2
 4d4:	0e 94 1e 03 	call	0x63c
 4d8:	df 91       	pop	r29
 4da:	cf 91       	pop	r28
 4dc:	08 95       	ret

000004de <TMR_Start>:
 4de:	6f 92       	push	r6
 4e0:	7f 92       	push	r7
 4e2:	8f 92       	push	r8
 4e4:	9f 92       	push	r9
 4e6:	af 92       	push	r10
 4e8:	bf 92       	push	r11
 4ea:	cf 92       	push	r12
 4ec:	df 92       	push	r13
 4ee:	ef 92       	push	r14
 4f0:	ff 92       	push	r15
 4f2:	0f 93       	push	r16
 4f4:	1f 93       	push	r17
 4f6:	cf 93       	push	r28
 4f8:	df 93       	push	r29
 4fa:	ec 01       	movw	r28, r24
 4fc:	5b 01       	movw	r10, r22
 4fe:	4a 01       	movw	r8, r20
 500:	72 2e       	mov	r7, r18
 502:	6c 2c       	mov	r6, r12
 504:	0e 94 0d 04 	call	0x81a
 508:	6c 01       	movw	r12, r24
 50a:	8f 85       	ldd	r24, Y+15	; 0x0f
 50c:	83 ff       	sbrs	r24, 3
 50e:	04 c0       	rjmp	.+8      	; 0x518
 510:	ce 01       	movw	r24, r28
 512:	0e 94 26 01 	call	0x24c
 516:	8f 85       	ldd	r24, Y+15	; 0x0f
 518:	ac 82       	std	Y+4, r10	; 0x04
 51a:	bd 82       	std	Y+5, r11	; 0x05
 51c:	88 86       	std	Y+8, r8	; 0x08
 51e:	99 86       	std	Y+9, r9	; 0x09
 520:	7a 86       	std	Y+10, r7	; 0x0a
 522:	0b 87       	std	Y+11, r16	; 0x0b
 524:	1c 87       	std	Y+12, r17	; 0x0c
 526:	ed 86       	std	Y+13, r14	; 0x0d
 528:	fe 86       	std	Y+14, r15	; 0x0e
 52a:	86 29       	or	r24, r6
 52c:	8f 87       	std	Y+15, r24	; 0x0f
 52e:	ce 01       	movw	r24, r28
 530:	0e 94 29 02 	call	0x452
 534:	c6 01       	movw	r24, r12
 536:	0e 94 11 04 	call	0x822
 53a:	df 91       	pop	r29
 53c:	cf 91       	pop	r28
 53e:	1f 91       	pop	r17
 540:	0f 91       	pop	r16
 542:	ff 90       	pop	r15
 544:	ef 90       	pop	r14
 546:	df 90       	pop	r13
 548:	cf 90       	pop	r12
 54a:	bf 90       	pop	r11
 54c:	af 90       	pop	r10
 54e:	9f 90       	pop	r9
 550:	8f 90       	pop	r8
 552:	7f 90       	pop	r7
 554:	6f 90       	pop	r6
 556:	08 95       	ret

00000558 <TSK_Sleep>:
 558:	cf 92       	push	r12
 55a:	ef 92       	push	r14
 55c:	ff 92       	push	r15
 55e:	0f 93       	push	r16
 560:	1f 93       	push	r17
 562:	fc 01       	movw	r30, r24
 564:	81 e0       	ldi	r24, 0x01	; 1
 566:	84 83       	std	Z+4, r24	; 0x04
 568:	92 e0       	ldi	r25, 0x02	; 2
 56a:	c9 2e       	mov	r12, r25
 56c:	ee 24       	eor	r14, r14
 56e:	ff 24       	eor	r15, r15
 570:	8f 01       	movw	r16, r30
 572:	20 e0       	ldi	r18, 0x00	; 0
 574:	4d ed       	ldi	r20, 0xDD	; 221
 576:	52 e0       	ldi	r21, 0x02	; 2
 578:	cf 01       	movw	r24, r30
 57a:	0e 96       	adiw	r24, 0x0e	; 14
 57c:	0e 94 6f 02 	call	0x4de
 580:	1f 91       	pop	r17
 582:	0f 91       	pop	r16
 584:	ff 90       	pop	r15
 586:	ef 90       	pop	r14
 588:	cf 90       	pop	r12
 58a:	08 95       	ret

0000058c <append_timeout>:
 58c:	9c 01       	movw	r18, r24
 58e:	8f ef       	ldi	r24, 0xFF	; 255
 590:	4f 3f       	cpi	r20, 0xFF	; 255
 592:	58 07       	cpc	r21, r24
 594:	89 f0       	breq	.+34     	; 0x5b8
 596:	f9 01       	movw	r30, r18
 598:	3e 96       	adiw	r30, 0x0e	; 14
 59a:	87 85       	ldd	r24, Z+15	; 0x0f
 59c:	82 60       	ori	r24, 0x02	; 2
 59e:	87 87       	std	Z+15, r24	; 0x0f
 5a0:	12 86       	std	Z+10, r1	; 0x0a
 5a2:	23 87       	std	Z+11, r18	; 0x0b
 5a4:	34 87       	std	Z+12, r19	; 0x0c
 5a6:	15 86       	std	Z+13, r1	; 0x0d
 5a8:	16 86       	std	Z+14, r1	; 0x0e
 5aa:	44 83       	std	Z+4, r20	; 0x04
 5ac:	55 83       	std	Z+5, r21	; 0x05
 5ae:	60 87       	std	Z+8, r22	; 0x08
 5b0:	71 87       	std	Z+9, r23	; 0x09
 5b2:	cf 01       	movw	r24, r30
 5b4:	0e 94 29 02 	call	0x452
 5b8:	08 95       	ret

000005ba <tsk_delay_clb>:
 5ba:	fb 01       	movw	r30, r22
 5bc:	85 e0       	ldi	r24, 0x05	; 5
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	86 83       	std	Z+6, r24	; 0x06
 5c2:	97 83       	std	Z+7, r25	; 0x07
 5c4:	14 82       	std	Z+4, r1	; 0x04
 5c6:	cb 01       	movw	r24, r22
 5c8:	0e 94 89 01 	call	0x312
 5cc:	80 e0       	ldi	r24, 0x00	; 0
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	08 95       	ret

000005d2 <get_curr_tsk>:
 5d2:	80 91 48 02 	lds	r24, 0x0248
 5d6:	90 91 49 02 	lds	r25, 0x0249
 5da:	08 95       	ret

000005dc <enqueue_top_object>:
 5dc:	cf 93       	push	r28
 5de:	df 93       	push	r29
 5e0:	ec 01       	movw	r28, r24
 5e2:	db 01       	movw	r26, r22
 5e4:	88 81       	ld	r24, Y
 5e6:	99 81       	ldd	r25, Y+1	; 0x01
 5e8:	00 97       	sbiw	r24, 0x00	; 0
 5ea:	41 f0       	breq	.+16     	; 0x5fc
 5ec:	8d 93       	st	X+, r24
 5ee:	9c 93       	st	X, r25
 5f0:	11 97       	sbiw	r26, 0x01	; 1
 5f2:	e8 81       	ld	r30, Y
 5f4:	f9 81       	ldd	r31, Y+1	; 0x01
 5f6:	62 83       	std	Z+2, r22	; 0x02
 5f8:	73 83       	std	Z+3, r23	; 0x03
 5fa:	05 c0       	rjmp	.+10     	; 0x606
 5fc:	8d 93       	st	X+, r24
 5fe:	9c 93       	st	X, r25
 600:	11 97       	sbiw	r26, 0x01	; 1
 602:	6a 83       	std	Y+2, r22	; 0x02
 604:	7b 83       	std	Y+3, r23	; 0x03
 606:	fd 01       	movw	r30, r26
 608:	12 82       	std	Z+2, r1	; 0x02
 60a:	13 82       	std	Z+3, r1	; 0x03
 60c:	a8 83       	st	Y, r26
 60e:	b9 83       	std	Y+1, r27	; 0x01
 610:	df 91       	pop	r29
 612:	cf 91       	pop	r28
 614:	08 95       	ret

00000616 <enqueue_middle_object>:
 616:	cf 93       	push	r28
 618:	df 93       	push	r29
 61a:	fc 01       	movw	r30, r24
 61c:	db 01       	movw	r26, r22
 61e:	82 81       	ldd	r24, Z+2	; 0x02
 620:	93 81       	ldd	r25, Z+3	; 0x03
 622:	ec 01       	movw	r28, r24
 624:	68 83       	st	Y, r22
 626:	79 83       	std	Y+1, r23	; 0x01
 628:	eb 01       	movw	r28, r22
 62a:	8a 83       	std	Y+2, r24	; 0x02
 62c:	9b 83       	std	Y+3, r25	; 0x03
 62e:	62 83       	std	Z+2, r22	; 0x02
 630:	73 83       	std	Z+3, r23	; 0x03
 632:	ed 93       	st	X+, r30
 634:	fc 93       	st	X, r31
 636:	df 91       	pop	r29
 638:	cf 91       	pop	r28
 63a:	08 95       	ret

0000063c <enqueue_bottom_object>:
 63c:	cf 93       	push	r28
 63e:	df 93       	push	r29
 640:	ec 01       	movw	r28, r24
 642:	db 01       	movw	r26, r22
 644:	8a 81       	ldd	r24, Y+2	; 0x02
 646:	9b 81       	ldd	r25, Y+3	; 0x03
 648:	00 97       	sbiw	r24, 0x00	; 0
 64a:	49 f0       	breq	.+18     	; 0x65e
 64c:	fc 01       	movw	r30, r24
 64e:	60 83       	st	Z, r22
 650:	71 83       	std	Z+1, r23	; 0x01
 652:	8a 81       	ldd	r24, Y+2	; 0x02
 654:	9b 81       	ldd	r25, Y+3	; 0x03
 656:	fb 01       	movw	r30, r22
 658:	82 83       	std	Z+2, r24	; 0x02
 65a:	93 83       	std	Z+3, r25	; 0x03
 65c:	05 c0       	rjmp	.+10     	; 0x668
 65e:	fb 01       	movw	r30, r22
 660:	82 83       	std	Z+2, r24	; 0x02
 662:	93 83       	std	Z+3, r25	; 0x03
 664:	68 83       	st	Y, r22
 666:	79 83       	std	Y+1, r23	; 0x01
 668:	1d 92       	st	X+, r1
 66a:	1c 92       	st	X, r1
 66c:	11 97       	sbiw	r26, 0x01	; 1
 66e:	aa 83       	std	Y+2, r26	; 0x02
 670:	bb 83       	std	Y+3, r27	; 0x03
 672:	df 91       	pop	r29
 674:	cf 91       	pop	r28
 676:	08 95       	ret

00000678 <dequeue_top_object>:
 678:	cf 93       	push	r28
 67a:	df 93       	push	r29
 67c:	dc 01       	movw	r26, r24
 67e:	cd 91       	ld	r28, X+
 680:	dc 91       	ld	r29, X
 682:	11 97       	sbiw	r26, 0x01	; 1
 684:	20 97       	sbiw	r28, 0x00	; 0
 686:	81 f0       	breq	.+32     	; 0x6a8
 688:	88 81       	ld	r24, Y
 68a:	99 81       	ldd	r25, Y+1	; 0x01
 68c:	00 97       	sbiw	r24, 0x00	; 0
 68e:	39 f4       	brne	.+14     	; 0x69e
 690:	8d 93       	st	X+, r24
 692:	9c 93       	st	X, r25
 694:	11 97       	sbiw	r26, 0x01	; 1
 696:	fd 01       	movw	r30, r26
 698:	82 83       	std	Z+2, r24	; 0x02
 69a:	93 83       	std	Z+3, r25	; 0x03
 69c:	05 c0       	rjmp	.+10     	; 0x6a8
 69e:	8d 93       	st	X+, r24
 6a0:	9c 93       	st	X, r25
 6a2:	fc 01       	movw	r30, r24
 6a4:	12 82       	std	Z+2, r1	; 0x02
 6a6:	13 82       	std	Z+3, r1	; 0x03
 6a8:	ce 01       	movw	r24, r28
 6aa:	df 91       	pop	r29
 6ac:	cf 91       	pop	r28
 6ae:	08 95       	ret

000006b0 <dequeue_object>:
 6b0:	cf 93       	push	r28
 6b2:	df 93       	push	r29
 6b4:	ec 01       	movw	r28, r24
 6b6:	fb 01       	movw	r30, r22
 6b8:	a2 81       	ldd	r26, Z+2	; 0x02
 6ba:	b3 81       	ldd	r27, Z+3	; 0x03
 6bc:	10 97       	sbiw	r26, 0x00	; 0
 6be:	69 f0       	breq	.+26     	; 0x6da
 6c0:	80 81       	ld	r24, Z
 6c2:	91 81       	ldd	r25, Z+1	; 0x01
 6c4:	8d 93       	st	X+, r24
 6c6:	9c 93       	st	X, r25
 6c8:	11 97       	sbiw	r26, 0x01	; 1
 6ca:	01 90       	ld	r0, Z+
 6cc:	f0 81       	ld	r31, Z
 6ce:	e0 2d       	mov	r30, r0
 6d0:	30 97       	sbiw	r30, 0x00	; 0
 6d2:	71 f0       	breq	.+28     	; 0x6f0
 6d4:	a2 83       	std	Z+2, r26	; 0x02
 6d6:	b3 83       	std	Z+3, r27	; 0x03
 6d8:	0d c0       	rjmp	.+26     	; 0x6f4
 6da:	80 81       	ld	r24, Z
 6dc:	91 81       	ldd	r25, Z+1	; 0x01
 6de:	88 83       	st	Y, r24
 6e0:	99 83       	std	Y+1, r25	; 0x01
 6e2:	a2 81       	ldd	r26, Z+2	; 0x02
 6e4:	b3 81       	ldd	r27, Z+3	; 0x03
 6e6:	01 90       	ld	r0, Z+
 6e8:	f0 81       	ld	r31, Z
 6ea:	e0 2d       	mov	r30, r0
 6ec:	30 97       	sbiw	r30, 0x00	; 0
 6ee:	91 f7       	brne	.-28     	; 0x6d4
 6f0:	aa 83       	std	Y+2, r26	; 0x02
 6f2:	bb 83       	std	Y+3, r27	; 0x03
 6f4:	df 91       	pop	r29
 6f6:	cf 91       	pop	r28
 6f8:	08 95       	ret

000006fa <MEM_Alloc>:
 6fa:	6f 92       	push	r6
 6fc:	7f 92       	push	r7
 6fe:	8f 92       	push	r8
 700:	9f 92       	push	r9
 702:	af 92       	push	r10
 704:	bf 92       	push	r11
 706:	cf 92       	push	r12
 708:	df 92       	push	r13
 70a:	ff 92       	push	r15
 70c:	0f 93       	push	r16
 70e:	1f 93       	push	r17
 710:	cf 93       	push	r28
 712:	8c 01       	movw	r16, r24
 714:	4b 01       	movw	r8, r22
 716:	fc 01       	movw	r30, r24
 718:	65 80       	ldd	r6, Z+5	; 0x05
 71a:	76 80       	ldd	r7, Z+6	; 0x06
 71c:	a3 80       	ldd	r10, Z+3	; 0x03
 71e:	b4 80       	ldd	r11, Z+4	; 0x04
 720:	c2 81       	ldd	r28, Z+2	; 0x02
 722:	81 e0       	ldi	r24, 0x01	; 1
 724:	c8 2e       	mov	r12, r24
 726:	d1 2c       	mov	r13, r1
 728:	00 80       	ld	r0, Z
 72a:	02 c0       	rjmp	.+4      	; 0x730
 72c:	cc 0c       	add	r12, r12
 72e:	dd 1c       	adc	r13, r13
 730:	0a 94       	dec	r0
 732:	e2 f7       	brpl	.-8      	; 0x72c
 734:	ff 24       	eor	r15, r15
 736:	0e 94 0d 04 	call	0x81a
 73a:	f8 01       	movw	r30, r16
 73c:	72 81       	ldd	r23, Z+2	; 0x02
 73e:	17 16       	cp	r1, r23
 740:	38 f5       	brcc	.+78     	; 0x790
 742:	40 e0       	ldi	r20, 0x00	; 0
 744:	50 e0       	ldi	r21, 0x00	; 0
 746:	3f 2d       	mov	r19, r15
 748:	3c 17       	cp	r19, r28
 74a:	58 f4       	brcc	.+22     	; 0x762
 74c:	f5 01       	movw	r30, r10
 74e:	e3 0f       	add	r30, r19
 750:	f1 1d       	adc	r31, r1
 752:	e0 81       	ld	r30, Z
 754:	ee 23       	and	r30, r30
 756:	29 f0       	breq	.+10     	; 0x762
 758:	6c 0c       	add	r6, r12
 75a:	7d 1c       	adc	r7, r13
 75c:	3e 0f       	add	r19, r30
 75e:	3c 17       	cp	r19, r28
 760:	a8 f3       	brcs	.-22     	; 0x74c
 762:	f3 2e       	mov	r15, r19
 764:	61 e0       	ldi	r22, 0x01	; 1
 766:	3c 17       	cp	r19, r28
 768:	78 f4       	brcc	.+30     	; 0x788
 76a:	f5 01       	movw	r30, r10
 76c:	e3 0f       	add	r30, r19
 76e:	f1 1d       	adc	r31, r1
 770:	21 91       	ld	r18, Z+
 772:	22 23       	and	r18, r18
 774:	91 f4       	brne	.+36     	; 0x79a
 776:	4c 0d       	add	r20, r12
 778:	5d 1d       	adc	r21, r13
 77a:	48 15       	cp	r20, r8
 77c:	59 05       	cpc	r21, r9
 77e:	80 f4       	brcc	.+32     	; 0x7a0
 780:	6f 5f       	subi	r22, 0xFF	; 255
 782:	3f 5f       	subi	r19, 0xFF	; 255
 784:	3c 17       	cp	r19, r28
 786:	a0 f3       	brcs	.-24     	; 0x770
 788:	3c 17       	cp	r19, r28
 78a:	11 f0       	breq	.+4      	; 0x790
 78c:	f7 16       	cp	r15, r23
 78e:	c8 f2       	brcs	.-78     	; 0x742
 790:	0e 94 11 04 	call	0x822
 794:	80 e0       	ldi	r24, 0x00	; 0
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	0a c0       	rjmp	.+20     	; 0x7ae
 79a:	f2 2e       	mov	r15, r18
 79c:	f3 0e       	add	r15, r19
 79e:	f4 cf       	rjmp	.-24     	; 0x788
 7a0:	af 0c       	add	r10, r15
 7a2:	b1 1c       	adc	r11, r1
 7a4:	f5 01       	movw	r30, r10
 7a6:	60 83       	st	Z, r22
 7a8:	0e 94 11 04 	call	0x822
 7ac:	c3 01       	movw	r24, r6
 7ae:	cf 91       	pop	r28
 7b0:	1f 91       	pop	r17
 7b2:	0f 91       	pop	r16
 7b4:	ff 90       	pop	r15
 7b6:	df 90       	pop	r13
 7b8:	cf 90       	pop	r12
 7ba:	bf 90       	pop	r11
 7bc:	af 90       	pop	r10
 7be:	9f 90       	pop	r9
 7c0:	8f 90       	pop	r8
 7c2:	7f 90       	pop	r7
 7c4:	6f 90       	pop	r6
 7c6:	08 95       	ret

000007c8 <MEM_Free>:
 7c8:	0f 93       	push	r16
 7ca:	1f 93       	push	r17
 7cc:	cf 93       	push	r28
 7ce:	df 93       	push	r29
 7d0:	ec 01       	movw	r28, r24
 7d2:	8b 01       	movw	r16, r22
 7d4:	0e 94 0d 04 	call	0x81a
 7d8:	bc 01       	movw	r22, r24
 7da:	8d 81       	ldd	r24, Y+5	; 0x05
 7dc:	9e 81       	ldd	r25, Y+6	; 0x06
 7de:	f8 01       	movw	r30, r16
 7e0:	e8 1b       	sub	r30, r24
 7e2:	f9 0b       	sbc	r31, r25
 7e4:	40 e0       	ldi	r20, 0x00	; 0
 7e6:	28 81       	ld	r18, Y
 7e8:	39 81       	ldd	r19, Y+1	; 0x01
 7ea:	21 15       	cp	r18, r1
 7ec:	31 05       	cpc	r19, r1
 7ee:	41 f0       	breq	.+16     	; 0x800
 7f0:	f6 95       	lsr	r31
 7f2:	e7 95       	ror	r30
 7f4:	4f 5f       	subi	r20, 0xFF	; 255
 7f6:	84 2f       	mov	r24, r20
 7f8:	99 27       	eor	r25, r25
 7fa:	82 17       	cp	r24, r18
 7fc:	93 07       	cpc	r25, r19
 7fe:	c0 f3       	brcs	.-16     	; 0x7f0
 800:	8b 81       	ldd	r24, Y+3	; 0x03
 802:	9c 81       	ldd	r25, Y+4	; 0x04
 804:	e8 0f       	add	r30, r24
 806:	f9 1f       	adc	r31, r25
 808:	10 82       	st	Z, r1
 80a:	cb 01       	movw	r24, r22
 80c:	0e 94 11 04 	call	0x822
 810:	df 91       	pop	r29
 812:	cf 91       	pop	r28
 814:	1f 91       	pop	r17
 816:	0f 91       	pop	r16
 818:	08 95       	ret

0000081a <INT_Disable>:
 81a:	8f b7       	in	r24, 0x3f	; 63
 81c:	f8 94       	cli
 81e:	08 95       	ret

00000820 <INT_Enable>:
 820:	18 95       	reti

00000822 <INT_Restore>:
 822:	87 ff       	sbrs	r24, 7
 824:	08 95       	ret
 826:	18 95       	reti
