
ZeroX86_NonPreImptiveKernel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000856  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00000856  000008ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000016  0080007a  0080007a  00000904  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000934  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000144d  00000000  00000000  00000a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000098a  00000000  00000000  00001ebd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008dc  00000000  00000000  00002847  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000374  00000000  00000000  00003124  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000074f  00000000  00000000  00003498  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e5d  00000000  00000000  00003be7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00004a44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__vector_4>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e5       	ldi	r30, 0x56	; 86
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 37       	cpi	r26, 0x7A	; 122
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e7       	ldi	r26, 0x7A	; 122
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 39       	cpi	r26, 0x90	; 144
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 02 01 	call	0x204	; 0x204 <main>
  8a:	0c 94 29 04 	jmp	0x852	; 0x852 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <systick_init>:
	#ifdef ARM_ST32
	
	#endif	//ARM_ST32
	
	return PRT_NO_ER;
}
  92:	83 35       	cpi	r24, 0x53	; 83
  94:	61 f4       	brne	.+24     	; 0xae <systick_init+0x1c>
  96:	78 94       	sei
  98:	8c e7       	ldi	r24, 0x7C	; 124
  9a:	8c bf       	out	0x3c, r24	; 60
  9c:	88 e2       	ldi	r24, 0x28	; 40
  9e:	83 bf       	out	0x33, r24	; 51
  a0:	83 b7       	in	r24, 0x33	; 51
  a2:	83 60       	ori	r24, 0x03	; 3
  a4:	83 bf       	out	0x33, r24	; 51
  a6:	89 b7       	in	r24, 0x39	; 57
  a8:	82 60       	ori	r24, 0x02	; 2
  aa:	89 bf       	out	0x39, r24	; 57
  ac:	1c c0       	rjmp	.+56     	; 0xe6 <systick_init+0x54>
  ae:	8e 34       	cpi	r24, 0x4E	; 78
  b0:	69 f4       	brne	.+26     	; 0xcc <systick_init+0x3a>
  b2:	78 94       	sei
  b4:	80 e8       	ldi	r24, 0x80	; 128
  b6:	8f bd       	out	0x2f, r24	; 47
  b8:	89 e0       	ldi	r24, 0x09	; 9
  ba:	8e bd       	out	0x2e, r24	; 46
  bc:	8f e1       	ldi	r24, 0x1F	; 31
  be:	8b bd       	out	0x2b, r24	; 43
  c0:	8f e3       	ldi	r24, 0x3F	; 63
  c2:	8a bd       	out	0x2a, r24	; 42
  c4:	89 b7       	in	r24, 0x39	; 57
  c6:	80 61       	ori	r24, 0x10	; 16
  c8:	89 bf       	out	0x39, r24	; 57
  ca:	0d c0       	rjmp	.+26     	; 0xe6 <systick_init+0x54>
  cc:	85 34       	cpi	r24, 0x45	; 69
  ce:	89 f4       	brne	.+34     	; 0xf2 <systick_init+0x60>
  d0:	78 94       	sei
  d2:	89 ef       	ldi	r24, 0xF9	; 249
  d4:	83 bd       	out	0x23, r24	; 35
  d6:	88 e2       	ldi	r24, 0x28	; 40
  d8:	85 bd       	out	0x25, r24	; 37
  da:	85 b5       	in	r24, 0x25	; 37
  dc:	83 60       	ori	r24, 0x03	; 3
  de:	85 bd       	out	0x25, r24	; 37
  e0:	89 b7       	in	r24, 0x39	; 57
  e2:	80 68       	ori	r24, 0x80	; 128
  e4:	89 bf       	out	0x39, r24	; 57
  e6:	50 93 7b 00 	sts	0x007B, r21	; 0x80007b <__data_end+0x1>
  ea:	40 93 7a 00 	sts	0x007A, r20	; 0x80007a <__data_end>
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	08 95       	ret
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	08 95       	ret

000000f6 <__vector_10>:
ISR(TIMER0_COMP_vect)
{
  f6:	1f 92       	push	r1
  f8:	0f 92       	push	r0
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	0f 92       	push	r0
  fe:	11 24       	eor	r1, r1
 100:	2f 93       	push	r18
 102:	3f 93       	push	r19
 104:	4f 93       	push	r20
 106:	5f 93       	push	r21
 108:	6f 93       	push	r22
 10a:	7f 93       	push	r23
 10c:	8f 93       	push	r24
 10e:	9f 93       	push	r25
 110:	af 93       	push	r26
 112:	bf 93       	push	r27
 114:	ef 93       	push	r30
 116:	ff 93       	push	r31
	if (timer_ctc_cbf != NULL)
 118:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <__data_end>
 11c:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <__data_end+0x1>
 120:	30 97       	sbiw	r30, 0x00	; 0
 122:	09 f0       	breq	.+2      	; 0x126 <__vector_10+0x30>
	{
		(*timer_ctc_cbf)();
 124:	09 95       	icall
	}
}
 126:	ff 91       	pop	r31
 128:	ef 91       	pop	r30
 12a:	bf 91       	pop	r27
 12c:	af 91       	pop	r26
 12e:	9f 91       	pop	r25
 130:	8f 91       	pop	r24
 132:	7f 91       	pop	r23
 134:	6f 91       	pop	r22
 136:	5f 91       	pop	r21
 138:	4f 91       	pop	r20
 13a:	3f 91       	pop	r19
 13c:	2f 91       	pop	r18
 13e:	0f 90       	pop	r0
 140:	0f be       	out	0x3f, r0	; 63
 142:	0f 90       	pop	r0
 144:	1f 90       	pop	r1
 146:	18 95       	reti

00000148 <__vector_7>:
ISR(TIMER1_COMPA_vect)
{
 148:	1f 92       	push	r1
 14a:	0f 92       	push	r0
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	0f 92       	push	r0
 150:	11 24       	eor	r1, r1
 152:	2f 93       	push	r18
 154:	3f 93       	push	r19
 156:	4f 93       	push	r20
 158:	5f 93       	push	r21
 15a:	6f 93       	push	r22
 15c:	7f 93       	push	r23
 15e:	8f 93       	push	r24
 160:	9f 93       	push	r25
 162:	af 93       	push	r26
 164:	bf 93       	push	r27
 166:	ef 93       	push	r30
 168:	ff 93       	push	r31
	if (timer_ctc_cbf != NULL)
 16a:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <__data_end>
 16e:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <__data_end+0x1>
 172:	30 97       	sbiw	r30, 0x00	; 0
 174:	09 f0       	breq	.+2      	; 0x178 <__vector_7+0x30>
	{
		(*timer_ctc_cbf)();
 176:	09 95       	icall
	}
	
}
 178:	ff 91       	pop	r31
 17a:	ef 91       	pop	r30
 17c:	bf 91       	pop	r27
 17e:	af 91       	pop	r26
 180:	9f 91       	pop	r25
 182:	8f 91       	pop	r24
 184:	7f 91       	pop	r23
 186:	6f 91       	pop	r22
 188:	5f 91       	pop	r21
 18a:	4f 91       	pop	r20
 18c:	3f 91       	pop	r19
 18e:	2f 91       	pop	r18
 190:	0f 90       	pop	r0
 192:	0f be       	out	0x3f, r0	; 63
 194:	0f 90       	pop	r0
 196:	1f 90       	pop	r1
 198:	18 95       	reti

0000019a <__vector_4>:
ISR(TIMER2_COMP_vect)
{
 19a:	1f 92       	push	r1
 19c:	0f 92       	push	r0
 19e:	0f b6       	in	r0, 0x3f	; 63
 1a0:	0f 92       	push	r0
 1a2:	11 24       	eor	r1, r1
 1a4:	2f 93       	push	r18
 1a6:	3f 93       	push	r19
 1a8:	4f 93       	push	r20
 1aa:	5f 93       	push	r21
 1ac:	6f 93       	push	r22
 1ae:	7f 93       	push	r23
 1b0:	8f 93       	push	r24
 1b2:	9f 93       	push	r25
 1b4:	af 93       	push	r26
 1b6:	bf 93       	push	r27
 1b8:	ef 93       	push	r30
 1ba:	ff 93       	push	r31
	if (timer_ctc_cbf != NULL)
 1bc:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <__data_end>
 1c0:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <__data_end+0x1>
 1c4:	30 97       	sbiw	r30, 0x00	; 0
 1c6:	09 f0       	breq	.+2      	; 0x1ca <__vector_4+0x30>
	{
		(*timer_ctc_cbf)();
 1c8:	09 95       	icall
	}
	
 1ca:	ff 91       	pop	r31
 1cc:	ef 91       	pop	r30
 1ce:	bf 91       	pop	r27
 1d0:	af 91       	pop	r26
 1d2:	9f 91       	pop	r25
 1d4:	8f 91       	pop	r24
 1d6:	7f 91       	pop	r23
 1d8:	6f 91       	pop	r22
 1da:	5f 91       	pop	r21
 1dc:	4f 91       	pop	r20
 1de:	3f 91       	pop	r19
 1e0:	2f 91       	pop	r18
 1e2:	0f 90       	pop	r0
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	0f 90       	pop	r0
 1e8:	1f 90       	pop	r1
 1ea:	18 95       	reti

000001ec <task1>:
#include <avr/io.h>
#include "ZeroX86.h"
void OnIdle(void );
OS_VoidT task1(OS_VoidT*arg)
{
	PORTA++;
 1ec:	8b b3       	in	r24, 0x1b	; 27
 1ee:	8f 5f       	subi	r24, 0xFF	; 255
 1f0:	8b bb       	out	0x1b, r24	; 27
 1f2:	08 95       	ret

000001f4 <task2>:
}
OS_VoidT task2(OS_VoidT*arg)
{
	PORTB++;
 1f4:	88 b3       	in	r24, 0x18	; 24
 1f6:	8f 5f       	subi	r24, 0xFF	; 255
 1f8:	88 bb       	out	0x18, r24	; 24
 1fa:	08 95       	ret

000001fc <task3>:
}
OS_VoidT task3(OS_VoidT*arg) 
{
	PORTC++;
 1fc:	85 b3       	in	r24, 0x15	; 21
 1fe:	8f 5f       	subi	r24, 0xFF	; 255
 200:	85 bb       	out	0x15, r24	; 21
 202:	08 95       	ret

00000204 <main>:
}
int main(void)
{
	DDRA=DDRB=DDRC=DDRD=0xff;
 204:	8f ef       	ldi	r24, 0xFF	; 255
 206:	81 bb       	out	0x11, r24	; 17
 208:	84 bb       	out	0x14, r24	; 20
 20a:	87 bb       	out	0x17, r24	; 23
 20c:	8a bb       	out	0x1a, r24	; 26
	OS_TaskHandlerT TstHandler1;
	OS_TaskHandlerT TstHandler2;
	OS_TaskHandlerT TstHandler3;
	OS_SysInit(TIMER_0);
 20e:	83 e5       	ldi	r24, 0x53	; 83
 210:	0e 94 a2 02 	call	0x544	; 0x544 <OS_SysInit>
	OS_CreateTask(TstHandler1,task1,50,1,20,"TSK1",5);
 214:	0f 2e       	mov	r0, r31
 216:	f5 e0       	ldi	r31, 0x05	; 5
 218:	8f 2e       	mov	r8, r31
 21a:	f0 2d       	mov	r31, r0
 21c:	0f 2e       	mov	r0, r31
 21e:	f6 e6       	ldi	r31, 0x66	; 102
 220:	af 2e       	mov	r10, r31
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	bf 2e       	mov	r11, r31
 226:	f0 2d       	mov	r31, r0
 228:	0f 2e       	mov	r0, r31
 22a:	f4 e1       	ldi	r31, 0x14	; 20
 22c:	cf 2e       	mov	r12, r31
 22e:	d1 2c       	mov	r13, r1
 230:	e1 2c       	mov	r14, r1
 232:	f1 2c       	mov	r15, r1
 234:	f0 2d       	mov	r31, r0
 236:	01 e0       	ldi	r16, 0x01	; 1
 238:	22 e3       	ldi	r18, 0x32	; 50
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	40 e0       	ldi	r20, 0x00	; 0
 23e:	50 e0       	ldi	r21, 0x00	; 0
 240:	66 ef       	ldi	r22, 0xF6	; 246
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 49 02 	call	0x492	; 0x492 <OS_CreateTask>
	OS_CreateTask(TstHandler2,task2,100,2,30,"TSK2",9);
 24c:	0f 2e       	mov	r0, r31
 24e:	f9 e0       	ldi	r31, 0x09	; 9
 250:	8f 2e       	mov	r8, r31
 252:	f0 2d       	mov	r31, r0
 254:	0f 2e       	mov	r0, r31
 256:	fb e6       	ldi	r31, 0x6B	; 107
 258:	af 2e       	mov	r10, r31
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	bf 2e       	mov	r11, r31
 25e:	f0 2d       	mov	r31, r0
 260:	0f 2e       	mov	r0, r31
 262:	fe e1       	ldi	r31, 0x1E	; 30
 264:	cf 2e       	mov	r12, r31
 266:	d1 2c       	mov	r13, r1
 268:	e1 2c       	mov	r14, r1
 26a:	f1 2c       	mov	r15, r1
 26c:	f0 2d       	mov	r31, r0
 26e:	02 e0       	ldi	r16, 0x02	; 2
 270:	24 e6       	ldi	r18, 0x64	; 100
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	40 e0       	ldi	r20, 0x00	; 0
 276:	50 e0       	ldi	r21, 0x00	; 0
 278:	6a ef       	ldi	r22, 0xFA	; 250
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	0e 94 49 02 	call	0x492	; 0x492 <OS_CreateTask>
	OS_CreateTask(TstHandler3,task3,25,3,25,"TSK3",4);
 284:	68 94       	set
 286:	88 24       	eor	r8, r8
 288:	82 f8       	bld	r8, 2
 28a:	0f 2e       	mov	r0, r31
 28c:	f0 e7       	ldi	r31, 0x70	; 112
 28e:	af 2e       	mov	r10, r31
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	bf 2e       	mov	r11, r31
 294:	f0 2d       	mov	r31, r0
 296:	0f 2e       	mov	r0, r31
 298:	f9 e1       	ldi	r31, 0x19	; 25
 29a:	cf 2e       	mov	r12, r31
 29c:	d1 2c       	mov	r13, r1
 29e:	e1 2c       	mov	r14, r1
 2a0:	f1 2c       	mov	r15, r1
 2a2:	f0 2d       	mov	r31, r0
 2a4:	03 e0       	ldi	r16, 0x03	; 3
 2a6:	29 e1       	ldi	r18, 0x19	; 25
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	40 e0       	ldi	r20, 0x00	; 0
 2ac:	50 e0       	ldi	r21, 0x00	; 0
 2ae:	6e ef       	ldi	r22, 0xFE	; 254
 2b0:	70 e0       	ldi	r23, 0x00	; 0
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 49 02 	call	0x492	; 0x492 <OS_CreateTask>

	OS_SysRun();
 2ba:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <OS_SysRun>
 2be:	ff cf       	rjmp	.-2      	; 0x2be <main+0xba>

000002c0 <OnIdle>:
    }
}

void OnIdle(void )
{
	PORTD++;
 2c0:	82 b3       	in	r24, 0x12	; 18
 2c2:	8f 5f       	subi	r24, 0xFF	; 255
 2c4:	82 bb       	out	0x12, r24	; 18
 2c6:	08 95       	ret

000002c8 <OS_TaskExecute>:
		}
		free(TaskHandler);
		TaskHandler = OS_NULL;
	}
	return OS_ERR_CNT_MALLOC;
}
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	ec 01       	movw	r28, r24
 2ce:	e9 89       	ldd	r30, Y+17	; 0x11
 2d0:	fa 89       	ldd	r31, Y+18	; 0x12
 2d2:	8f 81       	ldd	r24, Y+7	; 0x07
 2d4:	98 85       	ldd	r25, Y+8	; 0x08
 2d6:	09 95       	icall
 2d8:	1e 82       	std	Y+6, r1	; 0x06
 2da:	89 85       	ldd	r24, Y+9	; 0x09
 2dc:	9a 85       	ldd	r25, Y+10	; 0x0a
 2de:	ab 85       	ldd	r26, Y+11	; 0x0b
 2e0:	bc 85       	ldd	r27, Y+12	; 0x0c
 2e2:	8d 87       	std	Y+13, r24	; 0x0d
 2e4:	9e 87       	std	Y+14, r25	; 0x0e
 2e6:	af 87       	std	Y+15, r26	; 0x0f
 2e8:	b8 8b       	std	Y+16, r27	; 0x10
 2ea:	df 91       	pop	r29
 2ec:	cf 91       	pop	r28
 2ee:	08 95       	ret

000002f0 <OS_ListInsertTask>:
 2f0:	cf 93       	push	r28
 2f2:	df 93       	push	r29
 2f4:	ac 01       	movw	r20, r24
 2f6:	eb 01       	movw	r28, r22
 2f8:	00 97       	sbiw	r24, 0x00	; 0
 2fa:	c1 f1       	breq	.+112    	; 0x36c <OS_ListInsertTask+0x7c>
 2fc:	20 97       	sbiw	r28, 0x00	; 0
 2fe:	c1 f1       	breq	.+112    	; 0x370 <OS_ListInsertTask+0x80>
 300:	fc 01       	movw	r30, r24
 302:	a0 81       	ld	r26, Z
 304:	b1 81       	ldd	r27, Z+1	; 0x01
 306:	10 97       	sbiw	r26, 0x00	; 0
 308:	39 f4       	brne	.+14     	; 0x318 <OS_ListInsertTask+0x28>
 30a:	71 83       	std	Z+1, r23	; 0x01
 30c:	60 83       	st	Z, r22
 30e:	19 82       	std	Y+1, r1	; 0x01
 310:	18 82       	st	Y, r1
 312:	1b 82       	std	Y+3, r1	; 0x03
 314:	1a 82       	std	Y+2, r1	; 0x02
 316:	24 c0       	rjmp	.+72     	; 0x360 <OS_ListInsertTask+0x70>
 318:	2c 81       	ldd	r18, Y+4	; 0x04
 31a:	14 96       	adiw	r26, 0x04	; 4
 31c:	8c 91       	ld	r24, X
 31e:	14 97       	sbiw	r26, 0x04	; 4
 320:	28 17       	cp	r18, r24
 322:	10 f0       	brcs	.+4      	; 0x328 <OS_ListInsertTask+0x38>
 324:	14 c0       	rjmp	.+40     	; 0x34e <OS_ListInsertTask+0x5e>
 326:	df 01       	movw	r26, r30
 328:	ed 91       	ld	r30, X+
 32a:	fc 91       	ld	r31, X
 32c:	11 97       	sbiw	r26, 0x01	; 1
 32e:	94 81       	ldd	r25, Z+4	; 0x04
 330:	29 17       	cp	r18, r25
 332:	18 f4       	brcc	.+6      	; 0x33a <OS_ListInsertTask+0x4a>
 334:	30 97       	sbiw	r30, 0x00	; 0
 336:	b9 f7       	brne	.-18     	; 0x326 <OS_ListInsertTask+0x36>
 338:	02 c0       	rjmp	.+4      	; 0x33e <OS_ListInsertTask+0x4e>
 33a:	30 97       	sbiw	r30, 0x00	; 0
 33c:	59 f4       	brne	.+22     	; 0x354 <OS_ListInsertTask+0x64>
 33e:	11 96       	adiw	r26, 0x01	; 1
 340:	dc 93       	st	X, r29
 342:	ce 93       	st	-X, r28
 344:	19 82       	std	Y+1, r1	; 0x01
 346:	18 82       	st	Y, r1
 348:	bb 83       	std	Y+3, r27	; 0x03
 34a:	aa 83       	std	Y+2, r26	; 0x02
 34c:	09 c0       	rjmp	.+18     	; 0x360 <OS_ListInsertTask+0x70>
 34e:	fd 01       	movw	r30, r26
 350:	a0 e0       	ldi	r26, 0x00	; 0
 352:	b0 e0       	ldi	r27, 0x00	; 0
 354:	f9 83       	std	Y+1, r31	; 0x01
 356:	e8 83       	st	Y, r30
 358:	bb 83       	std	Y+3, r27	; 0x03
 35a:	aa 83       	std	Y+2, r26	; 0x02
 35c:	cd 93       	st	X+, r28
 35e:	dc 93       	st	X, r29
 360:	fa 01       	movw	r30, r20
 362:	84 81       	ldd	r24, Z+4	; 0x04
 364:	8f 5f       	subi	r24, 0xFF	; 255
 366:	84 83       	std	Z+4, r24	; 0x04
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	03 c0       	rjmp	.+6      	; 0x372 <OS_ListInsertTask+0x82>
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	01 c0       	rjmp	.+2      	; 0x372 <OS_ListInsertTask+0x82>
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	df 91       	pop	r29
 374:	cf 91       	pop	r28
 376:	08 95       	ret

00000378 <OS_SysTick>:
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	c0 91 7e 00 	lds	r28, 0x007E	; 0x80007e <OS_DlyList>
 380:	d0 91 7f 00 	lds	r29, 0x007F	; 0x80007f <OS_DlyList+0x1>
 384:	20 97       	sbiw	r28, 0x00	; 0
 386:	41 f0       	breq	.+16     	; 0x398 <OS_SysTick+0x20>
 388:	ce 01       	movw	r24, r28
 38a:	0e 94 0b 02 	call	0x416	; 0x416 <OS_TaskTickCount>
 38e:	09 90       	ld	r0, Y+
 390:	d8 81       	ld	r29, Y
 392:	c0 2d       	mov	r28, r0
 394:	20 97       	sbiw	r28, 0x00	; 0
 396:	c1 f7       	brne	.-16     	; 0x388 <OS_SysTick+0x10>
 398:	df 91       	pop	r29
 39a:	cf 91       	pop	r28
 39c:	08 95       	ret

0000039e <OS_ListRemoveTask>:
 39e:	cf 93       	push	r28
 3a0:	df 93       	push	r29
 3a2:	dc 01       	movw	r26, r24
 3a4:	89 2b       	or	r24, r25
 3a6:	69 f1       	breq	.+90     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3a8:	61 15       	cp	r22, r1
 3aa:	71 05       	cpc	r23, r1
 3ac:	61 f1       	breq	.+88     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3ae:	ed 91       	ld	r30, X+
 3b0:	fc 91       	ld	r31, X
 3b2:	11 97       	sbiw	r26, 0x01	; 1
 3b4:	30 97       	sbiw	r30, 0x00	; 0
 3b6:	49 f1       	breq	.+82     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3b8:	eb 01       	movw	r28, r22
 3ba:	2c 81       	ldd	r18, Y+4	; 0x04
 3bc:	84 81       	ldd	r24, Z+4	; 0x04
 3be:	28 17       	cp	r18, r24
 3c0:	61 f0       	breq	.+24     	; 0x3da <OS_ListRemoveTask+0x3c>
 3c2:	01 90       	ld	r0, Z+
 3c4:	f0 81       	ld	r31, Z
 3c6:	e0 2d       	mov	r30, r0
 3c8:	94 81       	ldd	r25, Z+4	; 0x04
 3ca:	29 17       	cp	r18, r25
 3cc:	21 f0       	breq	.+8      	; 0x3d6 <OS_ListRemoveTask+0x38>
 3ce:	30 97       	sbiw	r30, 0x00	; 0
 3d0:	c1 f7       	brne	.-16     	; 0x3c2 <OS_ListRemoveTask+0x24>
 3d2:	83 e0       	ldi	r24, 0x03	; 3
 3d4:	1d c0       	rjmp	.+58     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3d6:	30 97       	sbiw	r30, 0x00	; 0
 3d8:	d1 f0       	breq	.+52     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3da:	c0 81       	ld	r28, Z
 3dc:	d1 81       	ldd	r29, Z+1	; 0x01
 3de:	82 81       	ldd	r24, Z+2	; 0x02
 3e0:	93 81       	ldd	r25, Z+3	; 0x03
 3e2:	9b 83       	std	Y+3, r25	; 0x03
 3e4:	8a 83       	std	Y+2, r24	; 0x02
 3e6:	c2 81       	ldd	r28, Z+2	; 0x02
 3e8:	d3 81       	ldd	r29, Z+3	; 0x03
 3ea:	80 81       	ld	r24, Z
 3ec:	91 81       	ldd	r25, Z+1	; 0x01
 3ee:	99 83       	std	Y+1, r25	; 0x01
 3f0:	88 83       	st	Y, r24
 3f2:	14 96       	adiw	r26, 0x04	; 4
 3f4:	8c 91       	ld	r24, X
 3f6:	14 97       	sbiw	r26, 0x04	; 4
 3f8:	81 50       	subi	r24, 0x01	; 1
 3fa:	14 96       	adiw	r26, 0x04	; 4
 3fc:	8c 93       	st	X, r24
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	07 c0       	rjmp	.+14     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	05 c0       	rjmp	.+10     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	03 c0       	rjmp	.+6      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40a:	82 e0       	ldi	r24, 0x02	; 2
 40c:	01 c0       	rjmp	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40e:	83 e0       	ldi	r24, 0x03	; 3
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	08 95       	ret

00000416 <OS_TaskTickCount>:
 416:	0f 93       	push	r16
 418:	1f 93       	push	r17
 41a:	cf 93       	push	r28
 41c:	df 93       	push	r29
 41e:	fc 01       	movw	r30, r24
 420:	45 85       	ldd	r20, Z+13	; 0x0d
 422:	56 85       	ldd	r21, Z+14	; 0x0e
 424:	67 85       	ldd	r22, Z+15	; 0x0f
 426:	70 89       	ldd	r23, Z+16	; 0x10
 428:	41 50       	subi	r20, 0x01	; 1
 42a:	51 09       	sbc	r21, r1
 42c:	61 09       	sbc	r22, r1
 42e:	71 09       	sbc	r23, r1
 430:	45 87       	std	Z+13, r20	; 0x0d
 432:	56 87       	std	Z+14, r21	; 0x0e
 434:	67 87       	std	Z+15, r22	; 0x0f
 436:	70 8b       	std	Z+16, r23	; 0x10
 438:	00 91 88 00 	lds	r16, 0x0088	; 0x800088 <OS_SysClock>
 43c:	10 91 89 00 	lds	r17, 0x0089	; 0x800089 <OS_SysClock+0x1>
 440:	20 91 8a 00 	lds	r18, 0x008A	; 0x80008a <OS_SysClock+0x2>
 444:	30 91 8b 00 	lds	r19, 0x008B	; 0x80008b <OS_SysClock+0x3>
 448:	0f 5f       	subi	r16, 0xFF	; 255
 44a:	1f 4f       	sbci	r17, 0xFF	; 255
 44c:	2f 4f       	sbci	r18, 0xFF	; 255
 44e:	3f 4f       	sbci	r19, 0xFF	; 255
 450:	00 93 88 00 	sts	0x0088, r16	; 0x800088 <OS_SysClock>
 454:	10 93 89 00 	sts	0x0089, r17	; 0x800089 <OS_SysClock+0x1>
 458:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <OS_SysClock+0x2>
 45c:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <OS_SysClock+0x3>
 460:	45 2b       	or	r20, r21
 462:	46 2b       	or	r20, r22
 464:	47 2b       	or	r20, r23
 466:	69 f4       	brne	.+26     	; 0x482 <OS_TaskTickCount+0x6c>
 468:	ec 01       	movw	r28, r24
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	86 83       	std	Z+6, r24	; 0x06
 46e:	bf 01       	movw	r22, r30
 470:	8e e7       	ldi	r24, 0x7E	; 126
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	0e 94 cf 01 	call	0x39e	; 0x39e <OS_ListRemoveTask>
 478:	be 01       	movw	r22, r28
 47a:	83 e8       	ldi	r24, 0x83	; 131
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	0e 94 78 01 	call	0x2f0	; 0x2f0 <OS_ListInsertTask>
 482:	df 91       	pop	r29
 484:	cf 91       	pop	r28
 486:	1f 91       	pop	r17
 488:	0f 91       	pop	r16
 48a:	08 95       	ret

0000048c <IdleTask>:
 48c:	0e 94 60 01 	call	0x2c0	; 0x2c0 <OnIdle>
 490:	08 95       	ret

00000492 <OS_CreateTask>:
 492:	2f 92       	push	r2
 494:	3f 92       	push	r3
 496:	4f 92       	push	r4
 498:	5f 92       	push	r5
 49a:	6f 92       	push	r6
 49c:	7f 92       	push	r7
 49e:	8f 92       	push	r8
 4a0:	af 92       	push	r10
 4a2:	bf 92       	push	r11
 4a4:	cf 92       	push	r12
 4a6:	df 92       	push	r13
 4a8:	ef 92       	push	r14
 4aa:	ff 92       	push	r15
 4ac:	0f 93       	push	r16
 4ae:	cf 93       	push	r28
 4b0:	df 93       	push	r29
 4b2:	00 d0       	rcall	.+0      	; 0x4b4 <OS_CreateTask+0x22>
 4b4:	cd b7       	in	r28, 0x3d	; 61
 4b6:	de b7       	in	r29, 0x3e	; 62
 4b8:	1b 01       	movw	r2, r22
 4ba:	29 01       	movw	r4, r18
 4bc:	3a 01       	movw	r6, r20
 4be:	ba 82       	std	Y+2, r11	; 0x02
 4c0:	a9 82       	std	Y+1, r10	; 0x01
 4c2:	8c e1       	ldi	r24, 0x1C	; 28
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 01 03 	call	0x602	; 0x602 <malloc>
 4ca:	5c 01       	movw	r10, r24
 4cc:	00 97       	sbiw	r24, 0x00	; 0
 4ce:	31 f1       	breq	.+76     	; 0x51c <OS_CreateTask+0x8a>
 4d0:	fc 01       	movw	r30, r24
 4d2:	05 83       	std	Z+5, r16	; 0x05
 4d4:	41 86       	std	Z+9, r4	; 0x09
 4d6:	52 86       	std	Z+10, r5	; 0x0a
 4d8:	63 86       	std	Z+11, r6	; 0x0b
 4da:	74 86       	std	Z+12, r7	; 0x0c
 4dc:	84 82       	std	Z+4, r8	; 0x04
 4de:	32 8a       	std	Z+18, r3	; 0x12
 4e0:	21 8a       	std	Z+17, r2	; 0x11
 4e2:	4c 0c       	add	r4, r12
 4e4:	5d 1c       	adc	r5, r13
 4e6:	6e 1c       	adc	r6, r14
 4e8:	7f 1c       	adc	r7, r15
 4ea:	45 86       	std	Z+13, r4	; 0x0d
 4ec:	56 86       	std	Z+14, r5	; 0x0e
 4ee:	67 86       	std	Z+15, r6	; 0x0f
 4f0:	70 8a       	std	Z+16, r7	; 0x10
 4f2:	69 81       	ldd	r22, Y+1	; 0x01
 4f4:	7a 81       	ldd	r23, Y+2	; 0x02
 4f6:	43 96       	adiw	r24, 0x13	; 19
 4f8:	0e 94 22 04 	call	0x844	; 0x844 <strcpy>
 4fc:	cd 28       	or	r12, r13
 4fe:	ce 28       	or	r12, r14
 500:	cf 28       	or	r12, r15
 502:	31 f4       	brne	.+12     	; 0x510 <OS_CreateTask+0x7e>
 504:	b5 01       	movw	r22, r10
 506:	83 e8       	ldi	r24, 0x83	; 131
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	0e 94 78 01 	call	0x2f0	; 0x2f0 <OS_ListInsertTask>
 50e:	07 c0       	rjmp	.+14     	; 0x51e <OS_CreateTask+0x8c>
 510:	b5 01       	movw	r22, r10
 512:	8e e7       	ldi	r24, 0x7E	; 126
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	0e 94 78 01 	call	0x2f0	; 0x2f0 <OS_ListInsertTask>
 51a:	01 c0       	rjmp	.+2      	; 0x51e <OS_CreateTask+0x8c>
 51c:	84 e0       	ldi	r24, 0x04	; 4
 51e:	0f 90       	pop	r0
 520:	0f 90       	pop	r0
 522:	df 91       	pop	r29
 524:	cf 91       	pop	r28
 526:	0f 91       	pop	r16
 528:	ff 90       	pop	r15
 52a:	ef 90       	pop	r14
 52c:	df 90       	pop	r13
 52e:	cf 90       	pop	r12
 530:	bf 90       	pop	r11
 532:	af 90       	pop	r10
 534:	8f 90       	pop	r8
 536:	7f 90       	pop	r7
 538:	6f 90       	pop	r6
 53a:	5f 90       	pop	r5
 53c:	4f 90       	pop	r4
 53e:	3f 90       	pop	r3
 540:	2f 90       	pop	r2
 542:	08 95       	ret

00000544 <OS_SysInit>:
 544:	8f 92       	push	r8
 546:	af 92       	push	r10
 548:	bf 92       	push	r11
 54a:	cf 92       	push	r12
 54c:	df 92       	push	r13
 54e:	ef 92       	push	r14
 550:	ff 92       	push	r15
 552:	0f 93       	push	r16
 554:	cf 93       	push	r28
 556:	c8 2f       	mov	r28, r24
 558:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <OS_SysClock>
 55c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <OS_SysClock+0x1>
 560:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <OS_SysClock+0x2>
 564:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <OS_SysClock+0x3>
 568:	e3 e8       	ldi	r30, 0x83	; 131
 56a:	f0 e0       	ldi	r31, 0x00	; 0
 56c:	13 82       	std	Z+3, r1	; 0x03
 56e:	12 82       	std	Z+2, r1	; 0x02
 570:	11 82       	std	Z+1, r1	; 0x01
 572:	10 82       	st	Z, r1
 574:	14 82       	std	Z+4, r1	; 0x04
 576:	ee e7       	ldi	r30, 0x7E	; 126
 578:	f0 e0       	ldi	r31, 0x00	; 0
 57a:	13 82       	std	Z+3, r1	; 0x03
 57c:	12 82       	std	Z+2, r1	; 0x02
 57e:	11 82       	std	Z+1, r1	; 0x01
 580:	10 82       	st	Z, r1
 582:	14 82       	std	Z+4, r1	; 0x04
 584:	81 2c       	mov	r8, r1
 586:	0f 2e       	mov	r0, r31
 588:	f5 e7       	ldi	r31, 0x75	; 117
 58a:	af 2e       	mov	r10, r31
 58c:	f0 e0       	ldi	r31, 0x00	; 0
 58e:	bf 2e       	mov	r11, r31
 590:	f0 2d       	mov	r31, r0
 592:	c1 2c       	mov	r12, r1
 594:	d1 2c       	mov	r13, r1
 596:	76 01       	movw	r14, r12
 598:	00 e0       	ldi	r16, 0x00	; 0
 59a:	22 e0       	ldi	r18, 0x02	; 2
 59c:	30 e0       	ldi	r19, 0x00	; 0
 59e:	40 e0       	ldi	r20, 0x00	; 0
 5a0:	50 e0       	ldi	r21, 0x00	; 0
 5a2:	66 e4       	ldi	r22, 0x46	; 70
 5a4:	72 e0       	ldi	r23, 0x02	; 2
 5a6:	8c e7       	ldi	r24, 0x7C	; 124
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 94 49 02 	call	0x492	; 0x492 <OS_CreateTask>
 5ae:	4c eb       	ldi	r20, 0xBC	; 188
 5b0:	51 e0       	ldi	r21, 0x01	; 1
 5b2:	68 ee       	ldi	r22, 0xE8	; 232
 5b4:	73 e0       	ldi	r23, 0x03	; 3
 5b6:	8c 2f       	mov	r24, r28
 5b8:	0e 94 49 00 	call	0x92	; 0x92 <systick_init>
 5bc:	cf 91       	pop	r28
 5be:	0f 91       	pop	r16
 5c0:	ff 90       	pop	r15
 5c2:	ef 90       	pop	r14
 5c4:	df 90       	pop	r13
 5c6:	cf 90       	pop	r12
 5c8:	bf 90       	pop	r11
 5ca:	af 90       	pop	r10
 5cc:	8f 90       	pop	r8
 5ce:	08 95       	ret

000005d0 <OS_SysRun>:
}
static OS_ReturnT OS_ListTraverseTop(OS_TcbListT* TcbList,OS_VoidT(*PtrFunc)(OS_VoidT* ))
{
	if ((OS_NULL != TcbList) && (OS_NULL != PtrFunc))
	{
		OS_Tcb* TemPtr = TcbList->PtrListHead;
 5d0:	03 e8       	ldi	r16, 0x83	; 131
 5d2:	10 e0       	ldi	r17, 0x00	; 0
 5d4:	f8 01       	movw	r30, r16
 5d6:	c0 81       	ld	r28, Z
 5d8:	d1 81       	ldd	r29, Z+1	; 0x01
		while(OS_NULL != TemPtr)
 5da:	20 97       	sbiw	r28, 0x00	; 0
 5dc:	d9 f3       	breq	.-10     	; 0x5d4 <OS_SysRun+0x4>
		{
			(*PtrFunc)((OS_VoidT*)TemPtr);
 5de:	ce 01       	movw	r24, r28
 5e0:	0e 94 64 01 	call	0x2c8	; 0x2c8 <OS_TaskExecute>
			OS_ListRemoveTask(&OS_RdyList,TemPtr);
 5e4:	be 01       	movw	r22, r28
 5e6:	c8 01       	movw	r24, r16
 5e8:	0e 94 cf 01 	call	0x39e	; 0x39e <OS_ListRemoveTask>
			OS_ListInsertTask(&OS_DlyList,TemPtr);
 5ec:	be 01       	movw	r22, r28
 5ee:	8e e7       	ldi	r24, 0x7E	; 126
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 78 01 	call	0x2f0	; 0x2f0 <OS_ListInsertTask>
			TemPtr = TcbList->PtrListHead;
 5f6:	f8 01       	movw	r30, r16
 5f8:	c0 81       	ld	r28, Z
 5fa:	d1 81       	ldd	r29, Z+1	; 0x01
static OS_ReturnT OS_ListTraverseTop(OS_TcbListT* TcbList,OS_VoidT(*PtrFunc)(OS_VoidT* ))
{
	if ((OS_NULL != TcbList) && (OS_NULL != PtrFunc))
	{
		OS_Tcb* TemPtr = TcbList->PtrListHead;
		while(OS_NULL != TemPtr)
 5fc:	20 97       	sbiw	r28, 0x00	; 0
 5fe:	79 f7       	brne	.-34     	; 0x5de <OS_SysRun+0xe>
 600:	e9 cf       	rjmp	.-46     	; 0x5d4 <OS_SysRun+0x4>

00000602 <malloc>:
 602:	0f 93       	push	r16
 604:	1f 93       	push	r17
 606:	cf 93       	push	r28
 608:	df 93       	push	r29
 60a:	82 30       	cpi	r24, 0x02	; 2
 60c:	91 05       	cpc	r25, r1
 60e:	10 f4       	brcc	.+4      	; 0x614 <malloc+0x12>
 610:	82 e0       	ldi	r24, 0x02	; 2
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	e0 91 8e 00 	lds	r30, 0x008E	; 0x80008e <__flp>
 618:	f0 91 8f 00 	lds	r31, 0x008F	; 0x80008f <__flp+0x1>
 61c:	20 e0       	ldi	r18, 0x00	; 0
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	a0 e0       	ldi	r26, 0x00	; 0
 622:	b0 e0       	ldi	r27, 0x00	; 0
 624:	30 97       	sbiw	r30, 0x00	; 0
 626:	19 f1       	breq	.+70     	; 0x66e <malloc+0x6c>
 628:	40 81       	ld	r20, Z
 62a:	51 81       	ldd	r21, Z+1	; 0x01
 62c:	02 81       	ldd	r16, Z+2	; 0x02
 62e:	13 81       	ldd	r17, Z+3	; 0x03
 630:	48 17       	cp	r20, r24
 632:	59 07       	cpc	r21, r25
 634:	c8 f0       	brcs	.+50     	; 0x668 <malloc+0x66>
 636:	84 17       	cp	r24, r20
 638:	95 07       	cpc	r25, r21
 63a:	69 f4       	brne	.+26     	; 0x656 <malloc+0x54>
 63c:	10 97       	sbiw	r26, 0x00	; 0
 63e:	31 f0       	breq	.+12     	; 0x64c <malloc+0x4a>
 640:	12 96       	adiw	r26, 0x02	; 2
 642:	0c 93       	st	X, r16
 644:	12 97       	sbiw	r26, 0x02	; 2
 646:	13 96       	adiw	r26, 0x03	; 3
 648:	1c 93       	st	X, r17
 64a:	27 c0       	rjmp	.+78     	; 0x69a <malloc+0x98>
 64c:	00 93 8e 00 	sts	0x008E, r16	; 0x80008e <__flp>
 650:	10 93 8f 00 	sts	0x008F, r17	; 0x80008f <__flp+0x1>
 654:	22 c0       	rjmp	.+68     	; 0x69a <malloc+0x98>
 656:	21 15       	cp	r18, r1
 658:	31 05       	cpc	r19, r1
 65a:	19 f0       	breq	.+6      	; 0x662 <malloc+0x60>
 65c:	42 17       	cp	r20, r18
 65e:	53 07       	cpc	r21, r19
 660:	18 f4       	brcc	.+6      	; 0x668 <malloc+0x66>
 662:	9a 01       	movw	r18, r20
 664:	bd 01       	movw	r22, r26
 666:	ef 01       	movw	r28, r30
 668:	df 01       	movw	r26, r30
 66a:	f8 01       	movw	r30, r16
 66c:	db cf       	rjmp	.-74     	; 0x624 <malloc+0x22>
 66e:	21 15       	cp	r18, r1
 670:	31 05       	cpc	r19, r1
 672:	f9 f0       	breq	.+62     	; 0x6b2 <malloc+0xb0>
 674:	28 1b       	sub	r18, r24
 676:	39 0b       	sbc	r19, r25
 678:	24 30       	cpi	r18, 0x04	; 4
 67a:	31 05       	cpc	r19, r1
 67c:	80 f4       	brcc	.+32     	; 0x69e <malloc+0x9c>
 67e:	8a 81       	ldd	r24, Y+2	; 0x02
 680:	9b 81       	ldd	r25, Y+3	; 0x03
 682:	61 15       	cp	r22, r1
 684:	71 05       	cpc	r23, r1
 686:	21 f0       	breq	.+8      	; 0x690 <malloc+0x8e>
 688:	fb 01       	movw	r30, r22
 68a:	93 83       	std	Z+3, r25	; 0x03
 68c:	82 83       	std	Z+2, r24	; 0x02
 68e:	04 c0       	rjmp	.+8      	; 0x698 <malloc+0x96>
 690:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <__flp+0x1>
 694:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <__flp>
 698:	fe 01       	movw	r30, r28
 69a:	32 96       	adiw	r30, 0x02	; 2
 69c:	44 c0       	rjmp	.+136    	; 0x726 <malloc+0x124>
 69e:	fe 01       	movw	r30, r28
 6a0:	e2 0f       	add	r30, r18
 6a2:	f3 1f       	adc	r31, r19
 6a4:	81 93       	st	Z+, r24
 6a6:	91 93       	st	Z+, r25
 6a8:	22 50       	subi	r18, 0x02	; 2
 6aa:	31 09       	sbc	r19, r1
 6ac:	39 83       	std	Y+1, r19	; 0x01
 6ae:	28 83       	st	Y, r18
 6b0:	3a c0       	rjmp	.+116    	; 0x726 <malloc+0x124>
 6b2:	20 91 8c 00 	lds	r18, 0x008C	; 0x80008c <__brkval>
 6b6:	30 91 8d 00 	lds	r19, 0x008D	; 0x80008d <__brkval+0x1>
 6ba:	23 2b       	or	r18, r19
 6bc:	41 f4       	brne	.+16     	; 0x6ce <malloc+0xcc>
 6be:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 6c2:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 6c6:	30 93 8d 00 	sts	0x008D, r19	; 0x80008d <__brkval+0x1>
 6ca:	20 93 8c 00 	sts	0x008C, r18	; 0x80008c <__brkval>
 6ce:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
 6d2:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
 6d6:	21 15       	cp	r18, r1
 6d8:	31 05       	cpc	r19, r1
 6da:	41 f4       	brne	.+16     	; 0x6ec <malloc+0xea>
 6dc:	2d b7       	in	r18, 0x3d	; 61
 6de:	3e b7       	in	r19, 0x3e	; 62
 6e0:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 6e4:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 6e8:	24 1b       	sub	r18, r20
 6ea:	35 0b       	sbc	r19, r21
 6ec:	e0 91 8c 00 	lds	r30, 0x008C	; 0x80008c <__brkval>
 6f0:	f0 91 8d 00 	lds	r31, 0x008D	; 0x80008d <__brkval+0x1>
 6f4:	e2 17       	cp	r30, r18
 6f6:	f3 07       	cpc	r31, r19
 6f8:	a0 f4       	brcc	.+40     	; 0x722 <malloc+0x120>
 6fa:	2e 1b       	sub	r18, r30
 6fc:	3f 0b       	sbc	r19, r31
 6fe:	28 17       	cp	r18, r24
 700:	39 07       	cpc	r19, r25
 702:	78 f0       	brcs	.+30     	; 0x722 <malloc+0x120>
 704:	ac 01       	movw	r20, r24
 706:	4e 5f       	subi	r20, 0xFE	; 254
 708:	5f 4f       	sbci	r21, 0xFF	; 255
 70a:	24 17       	cp	r18, r20
 70c:	35 07       	cpc	r19, r21
 70e:	48 f0       	brcs	.+18     	; 0x722 <malloc+0x120>
 710:	4e 0f       	add	r20, r30
 712:	5f 1f       	adc	r21, r31
 714:	50 93 8d 00 	sts	0x008D, r21	; 0x80008d <__brkval+0x1>
 718:	40 93 8c 00 	sts	0x008C, r20	; 0x80008c <__brkval>
 71c:	81 93       	st	Z+, r24
 71e:	91 93       	st	Z+, r25
 720:	02 c0       	rjmp	.+4      	; 0x726 <malloc+0x124>
 722:	e0 e0       	ldi	r30, 0x00	; 0
 724:	f0 e0       	ldi	r31, 0x00	; 0
 726:	cf 01       	movw	r24, r30
 728:	df 91       	pop	r29
 72a:	cf 91       	pop	r28
 72c:	1f 91       	pop	r17
 72e:	0f 91       	pop	r16
 730:	08 95       	ret

00000732 <free>:
 732:	cf 93       	push	r28
 734:	df 93       	push	r29
 736:	00 97       	sbiw	r24, 0x00	; 0
 738:	09 f4       	brne	.+2      	; 0x73c <free+0xa>
 73a:	81 c0       	rjmp	.+258    	; 0x83e <free+0x10c>
 73c:	fc 01       	movw	r30, r24
 73e:	32 97       	sbiw	r30, 0x02	; 2
 740:	13 82       	std	Z+3, r1	; 0x03
 742:	12 82       	std	Z+2, r1	; 0x02
 744:	a0 91 8e 00 	lds	r26, 0x008E	; 0x80008e <__flp>
 748:	b0 91 8f 00 	lds	r27, 0x008F	; 0x80008f <__flp+0x1>
 74c:	10 97       	sbiw	r26, 0x00	; 0
 74e:	81 f4       	brne	.+32     	; 0x770 <free+0x3e>
 750:	20 81       	ld	r18, Z
 752:	31 81       	ldd	r19, Z+1	; 0x01
 754:	82 0f       	add	r24, r18
 756:	93 1f       	adc	r25, r19
 758:	20 91 8c 00 	lds	r18, 0x008C	; 0x80008c <__brkval>
 75c:	30 91 8d 00 	lds	r19, 0x008D	; 0x80008d <__brkval+0x1>
 760:	28 17       	cp	r18, r24
 762:	39 07       	cpc	r19, r25
 764:	51 f5       	brne	.+84     	; 0x7ba <free+0x88>
 766:	f0 93 8d 00 	sts	0x008D, r31	; 0x80008d <__brkval+0x1>
 76a:	e0 93 8c 00 	sts	0x008C, r30	; 0x80008c <__brkval>
 76e:	67 c0       	rjmp	.+206    	; 0x83e <free+0x10c>
 770:	ed 01       	movw	r28, r26
 772:	20 e0       	ldi	r18, 0x00	; 0
 774:	30 e0       	ldi	r19, 0x00	; 0
 776:	ce 17       	cp	r28, r30
 778:	df 07       	cpc	r29, r31
 77a:	40 f4       	brcc	.+16     	; 0x78c <free+0x5a>
 77c:	4a 81       	ldd	r20, Y+2	; 0x02
 77e:	5b 81       	ldd	r21, Y+3	; 0x03
 780:	9e 01       	movw	r18, r28
 782:	41 15       	cp	r20, r1
 784:	51 05       	cpc	r21, r1
 786:	f1 f0       	breq	.+60     	; 0x7c4 <free+0x92>
 788:	ea 01       	movw	r28, r20
 78a:	f5 cf       	rjmp	.-22     	; 0x776 <free+0x44>
 78c:	d3 83       	std	Z+3, r29	; 0x03
 78e:	c2 83       	std	Z+2, r28	; 0x02
 790:	40 81       	ld	r20, Z
 792:	51 81       	ldd	r21, Z+1	; 0x01
 794:	84 0f       	add	r24, r20
 796:	95 1f       	adc	r25, r21
 798:	c8 17       	cp	r28, r24
 79a:	d9 07       	cpc	r29, r25
 79c:	59 f4       	brne	.+22     	; 0x7b4 <free+0x82>
 79e:	88 81       	ld	r24, Y
 7a0:	99 81       	ldd	r25, Y+1	; 0x01
 7a2:	84 0f       	add	r24, r20
 7a4:	95 1f       	adc	r25, r21
 7a6:	02 96       	adiw	r24, 0x02	; 2
 7a8:	91 83       	std	Z+1, r25	; 0x01
 7aa:	80 83       	st	Z, r24
 7ac:	8a 81       	ldd	r24, Y+2	; 0x02
 7ae:	9b 81       	ldd	r25, Y+3	; 0x03
 7b0:	93 83       	std	Z+3, r25	; 0x03
 7b2:	82 83       	std	Z+2, r24	; 0x02
 7b4:	21 15       	cp	r18, r1
 7b6:	31 05       	cpc	r19, r1
 7b8:	29 f4       	brne	.+10     	; 0x7c4 <free+0x92>
 7ba:	f0 93 8f 00 	sts	0x008F, r31	; 0x80008f <__flp+0x1>
 7be:	e0 93 8e 00 	sts	0x008E, r30	; 0x80008e <__flp>
 7c2:	3d c0       	rjmp	.+122    	; 0x83e <free+0x10c>
 7c4:	e9 01       	movw	r28, r18
 7c6:	fb 83       	std	Y+3, r31	; 0x03
 7c8:	ea 83       	std	Y+2, r30	; 0x02
 7ca:	49 91       	ld	r20, Y+
 7cc:	59 91       	ld	r21, Y+
 7ce:	c4 0f       	add	r28, r20
 7d0:	d5 1f       	adc	r29, r21
 7d2:	ec 17       	cp	r30, r28
 7d4:	fd 07       	cpc	r31, r29
 7d6:	61 f4       	brne	.+24     	; 0x7f0 <free+0xbe>
 7d8:	80 81       	ld	r24, Z
 7da:	91 81       	ldd	r25, Z+1	; 0x01
 7dc:	84 0f       	add	r24, r20
 7de:	95 1f       	adc	r25, r21
 7e0:	02 96       	adiw	r24, 0x02	; 2
 7e2:	e9 01       	movw	r28, r18
 7e4:	99 83       	std	Y+1, r25	; 0x01
 7e6:	88 83       	st	Y, r24
 7e8:	82 81       	ldd	r24, Z+2	; 0x02
 7ea:	93 81       	ldd	r25, Z+3	; 0x03
 7ec:	9b 83       	std	Y+3, r25	; 0x03
 7ee:	8a 83       	std	Y+2, r24	; 0x02
 7f0:	e0 e0       	ldi	r30, 0x00	; 0
 7f2:	f0 e0       	ldi	r31, 0x00	; 0
 7f4:	12 96       	adiw	r26, 0x02	; 2
 7f6:	8d 91       	ld	r24, X+
 7f8:	9c 91       	ld	r25, X
 7fa:	13 97       	sbiw	r26, 0x03	; 3
 7fc:	00 97       	sbiw	r24, 0x00	; 0
 7fe:	19 f0       	breq	.+6      	; 0x806 <free+0xd4>
 800:	fd 01       	movw	r30, r26
 802:	dc 01       	movw	r26, r24
 804:	f7 cf       	rjmp	.-18     	; 0x7f4 <free+0xc2>
 806:	8d 91       	ld	r24, X+
 808:	9c 91       	ld	r25, X
 80a:	11 97       	sbiw	r26, 0x01	; 1
 80c:	9d 01       	movw	r18, r26
 80e:	2e 5f       	subi	r18, 0xFE	; 254
 810:	3f 4f       	sbci	r19, 0xFF	; 255
 812:	82 0f       	add	r24, r18
 814:	93 1f       	adc	r25, r19
 816:	20 91 8c 00 	lds	r18, 0x008C	; 0x80008c <__brkval>
 81a:	30 91 8d 00 	lds	r19, 0x008D	; 0x80008d <__brkval+0x1>
 81e:	28 17       	cp	r18, r24
 820:	39 07       	cpc	r19, r25
 822:	69 f4       	brne	.+26     	; 0x83e <free+0x10c>
 824:	30 97       	sbiw	r30, 0x00	; 0
 826:	29 f4       	brne	.+10     	; 0x832 <free+0x100>
 828:	10 92 8f 00 	sts	0x008F, r1	; 0x80008f <__flp+0x1>
 82c:	10 92 8e 00 	sts	0x008E, r1	; 0x80008e <__flp>
 830:	02 c0       	rjmp	.+4      	; 0x836 <free+0x104>
 832:	13 82       	std	Z+3, r1	; 0x03
 834:	12 82       	std	Z+2, r1	; 0x02
 836:	b0 93 8d 00 	sts	0x008D, r27	; 0x80008d <__brkval+0x1>
 83a:	a0 93 8c 00 	sts	0x008C, r26	; 0x80008c <__brkval>
 83e:	df 91       	pop	r29
 840:	cf 91       	pop	r28
 842:	08 95       	ret

00000844 <strcpy>:
 844:	fb 01       	movw	r30, r22
 846:	dc 01       	movw	r26, r24
 848:	01 90       	ld	r0, Z+
 84a:	0d 92       	st	X+, r0
 84c:	00 20       	and	r0, r0
 84e:	e1 f7       	brne	.-8      	; 0x848 <strcpy+0x4>
 850:	08 95       	ret

00000852 <_exit>:
 852:	f8 94       	cli

00000854 <__stop_program>:
 854:	ff cf       	rjmp	.-2      	; 0x854 <__stop_program>
