
ZeroX86_NonPreImptiveKernel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000079a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  0000079a  0000082e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  00800076  00800076  00000844  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000844  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000874  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  000008b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012e9  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000952  00000000  00000000  00001c91  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000853  00000000  00000000  000025e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000320  00000000  00000000  00002e38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000773  00000000  00000000  00003158  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cec  00000000  00000000  000038cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  000045b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 cd 00 	jmp	0x19a	; 0x19a <__vector_4>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e9       	ldi	r30, 0x9A	; 154
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e7       	ldi	r26, 0x76	; 118
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 38       	cpi	r26, 0x8A	; 138
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 02 01 	call	0x204	; 0x204 <main>
  8a:	0c 94 cb 03 	jmp	0x796	; 0x796 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <systick_init>:
	#ifdef ARM_ST32
	
	#endif	//ARM_ST32
	
	return PRT_NO_ER;
}
  92:	83 35       	cpi	r24, 0x53	; 83
  94:	61 f4       	brne	.+24     	; 0xae <systick_init+0x1c>
  96:	78 94       	sei
  98:	8c e7       	ldi	r24, 0x7C	; 124
  9a:	8c bf       	out	0x3c, r24	; 60
  9c:	88 e2       	ldi	r24, 0x28	; 40
  9e:	83 bf       	out	0x33, r24	; 51
  a0:	83 b7       	in	r24, 0x33	; 51
  a2:	83 60       	ori	r24, 0x03	; 3
  a4:	83 bf       	out	0x33, r24	; 51
  a6:	89 b7       	in	r24, 0x39	; 57
  a8:	82 60       	ori	r24, 0x02	; 2
  aa:	89 bf       	out	0x39, r24	; 57
  ac:	1c c0       	rjmp	.+56     	; 0xe6 <systick_init+0x54>
  ae:	8e 34       	cpi	r24, 0x4E	; 78
  b0:	69 f4       	brne	.+26     	; 0xcc <systick_init+0x3a>
  b2:	78 94       	sei
  b4:	80 e8       	ldi	r24, 0x80	; 128
  b6:	8f bd       	out	0x2f, r24	; 47
  b8:	89 e0       	ldi	r24, 0x09	; 9
  ba:	8e bd       	out	0x2e, r24	; 46
  bc:	8f e1       	ldi	r24, 0x1F	; 31
  be:	8b bd       	out	0x2b, r24	; 43
  c0:	8f e3       	ldi	r24, 0x3F	; 63
  c2:	8a bd       	out	0x2a, r24	; 42
  c4:	89 b7       	in	r24, 0x39	; 57
  c6:	80 61       	ori	r24, 0x10	; 16
  c8:	89 bf       	out	0x39, r24	; 57
  ca:	0d c0       	rjmp	.+26     	; 0xe6 <systick_init+0x54>
  cc:	85 34       	cpi	r24, 0x45	; 69
  ce:	89 f4       	brne	.+34     	; 0xf2 <systick_init+0x60>
  d0:	78 94       	sei
  d2:	89 ef       	ldi	r24, 0xF9	; 249
  d4:	83 bd       	out	0x23, r24	; 35
  d6:	88 e2       	ldi	r24, 0x28	; 40
  d8:	85 bd       	out	0x25, r24	; 37
  da:	85 b5       	in	r24, 0x25	; 37
  dc:	83 60       	ori	r24, 0x03	; 3
  de:	85 bd       	out	0x25, r24	; 37
  e0:	89 b7       	in	r24, 0x39	; 57
  e2:	80 68       	ori	r24, 0x80	; 128
  e4:	89 bf       	out	0x39, r24	; 57
  e6:	50 93 77 00 	sts	0x0077, r21	; 0x800077 <__data_end+0x1>
  ea:	40 93 76 00 	sts	0x0076, r20	; 0x800076 <__data_end>
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	08 95       	ret
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	08 95       	ret

000000f6 <__vector_10>:
ISR(TIMER0_COMP_vect)
{
  f6:	1f 92       	push	r1
  f8:	0f 92       	push	r0
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	0f 92       	push	r0
  fe:	11 24       	eor	r1, r1
 100:	2f 93       	push	r18
 102:	3f 93       	push	r19
 104:	4f 93       	push	r20
 106:	5f 93       	push	r21
 108:	6f 93       	push	r22
 10a:	7f 93       	push	r23
 10c:	8f 93       	push	r24
 10e:	9f 93       	push	r25
 110:	af 93       	push	r26
 112:	bf 93       	push	r27
 114:	ef 93       	push	r30
 116:	ff 93       	push	r31
	if (timer_ctc_cbf != NULL)
 118:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <__data_end>
 11c:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <__data_end+0x1>
 120:	30 97       	sbiw	r30, 0x00	; 0
 122:	09 f0       	breq	.+2      	; 0x126 <__vector_10+0x30>
	{
		(*timer_ctc_cbf)();
 124:	09 95       	icall
	}
}
 126:	ff 91       	pop	r31
 128:	ef 91       	pop	r30
 12a:	bf 91       	pop	r27
 12c:	af 91       	pop	r26
 12e:	9f 91       	pop	r25
 130:	8f 91       	pop	r24
 132:	7f 91       	pop	r23
 134:	6f 91       	pop	r22
 136:	5f 91       	pop	r21
 138:	4f 91       	pop	r20
 13a:	3f 91       	pop	r19
 13c:	2f 91       	pop	r18
 13e:	0f 90       	pop	r0
 140:	0f be       	out	0x3f, r0	; 63
 142:	0f 90       	pop	r0
 144:	1f 90       	pop	r1
 146:	18 95       	reti

00000148 <__vector_7>:
ISR(TIMER1_COMPA_vect)
{
 148:	1f 92       	push	r1
 14a:	0f 92       	push	r0
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	0f 92       	push	r0
 150:	11 24       	eor	r1, r1
 152:	2f 93       	push	r18
 154:	3f 93       	push	r19
 156:	4f 93       	push	r20
 158:	5f 93       	push	r21
 15a:	6f 93       	push	r22
 15c:	7f 93       	push	r23
 15e:	8f 93       	push	r24
 160:	9f 93       	push	r25
 162:	af 93       	push	r26
 164:	bf 93       	push	r27
 166:	ef 93       	push	r30
 168:	ff 93       	push	r31
	if (timer_ctc_cbf != NULL)
 16a:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <__data_end>
 16e:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <__data_end+0x1>
 172:	30 97       	sbiw	r30, 0x00	; 0
 174:	09 f0       	breq	.+2      	; 0x178 <__vector_7+0x30>
	{
		(*timer_ctc_cbf)();
 176:	09 95       	icall
	}
	
}
 178:	ff 91       	pop	r31
 17a:	ef 91       	pop	r30
 17c:	bf 91       	pop	r27
 17e:	af 91       	pop	r26
 180:	9f 91       	pop	r25
 182:	8f 91       	pop	r24
 184:	7f 91       	pop	r23
 186:	6f 91       	pop	r22
 188:	5f 91       	pop	r21
 18a:	4f 91       	pop	r20
 18c:	3f 91       	pop	r19
 18e:	2f 91       	pop	r18
 190:	0f 90       	pop	r0
 192:	0f be       	out	0x3f, r0	; 63
 194:	0f 90       	pop	r0
 196:	1f 90       	pop	r1
 198:	18 95       	reti

0000019a <__vector_4>:
ISR(TIMER2_COMP_vect)
{
 19a:	1f 92       	push	r1
 19c:	0f 92       	push	r0
 19e:	0f b6       	in	r0, 0x3f	; 63
 1a0:	0f 92       	push	r0
 1a2:	11 24       	eor	r1, r1
 1a4:	2f 93       	push	r18
 1a6:	3f 93       	push	r19
 1a8:	4f 93       	push	r20
 1aa:	5f 93       	push	r21
 1ac:	6f 93       	push	r22
 1ae:	7f 93       	push	r23
 1b0:	8f 93       	push	r24
 1b2:	9f 93       	push	r25
 1b4:	af 93       	push	r26
 1b6:	bf 93       	push	r27
 1b8:	ef 93       	push	r30
 1ba:	ff 93       	push	r31
	if (timer_ctc_cbf != NULL)
 1bc:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <__data_end>
 1c0:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <__data_end+0x1>
 1c4:	30 97       	sbiw	r30, 0x00	; 0
 1c6:	09 f0       	breq	.+2      	; 0x1ca <__vector_4+0x30>
	{
		(*timer_ctc_cbf)();
 1c8:	09 95       	icall
	}
	
 1ca:	ff 91       	pop	r31
 1cc:	ef 91       	pop	r30
 1ce:	bf 91       	pop	r27
 1d0:	af 91       	pop	r26
 1d2:	9f 91       	pop	r25
 1d4:	8f 91       	pop	r24
 1d6:	7f 91       	pop	r23
 1d8:	6f 91       	pop	r22
 1da:	5f 91       	pop	r21
 1dc:	4f 91       	pop	r20
 1de:	3f 91       	pop	r19
 1e0:	2f 91       	pop	r18
 1e2:	0f 90       	pop	r0
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	0f 90       	pop	r0
 1e8:	1f 90       	pop	r1
 1ea:	18 95       	reti

000001ec <task1>:
#include <avr/io.h>
#include "ZeroX86.h"
void OnIdle(void );
OS_VoidT task1(OS_VoidT*arg)
{
	PORTA++;
 1ec:	8b b3       	in	r24, 0x1b	; 27
 1ee:	8f 5f       	subi	r24, 0xFF	; 255
 1f0:	8b bb       	out	0x1b, r24	; 27
 1f2:	08 95       	ret

000001f4 <task2>:
}
OS_VoidT task2(OS_VoidT*arg)
{
	PORTB++;
 1f4:	88 b3       	in	r24, 0x18	; 24
 1f6:	8f 5f       	subi	r24, 0xFF	; 255
 1f8:	88 bb       	out	0x18, r24	; 24
 1fa:	08 95       	ret

000001fc <task3>:
}
OS_VoidT task3(OS_VoidT*arg) 
{
	PORTC++;
 1fc:	85 b3       	in	r24, 0x15	; 21
 1fe:	8f 5f       	subi	r24, 0xFF	; 255
 200:	85 bb       	out	0x15, r24	; 21
 202:	08 95       	ret

00000204 <main>:
}
int main(void)
{
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
 208:	00 d0       	rcall	.+0      	; 0x20a <main+0x6>
 20a:	00 d0       	rcall	.+0      	; 0x20c <main+0x8>
 20c:	00 d0       	rcall	.+0      	; 0x20e <main+0xa>
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
	DDRA=DDRB=DDRC=DDRD=0xff;
 212:	8f ef       	ldi	r24, 0xFF	; 255
 214:	81 bb       	out	0x11, r24	; 17
 216:	84 bb       	out	0x14, r24	; 20
 218:	87 bb       	out	0x17, r24	; 23
 21a:	8a bb       	out	0x1a, r24	; 26
	OS_TaskHandlerT TstHandler1;
	OS_TaskHandlerT TstHandler2;
	OS_TaskHandlerT TstHandler3;
	OS_SysInit(TIMER_0);
 21c:	83 e5       	ldi	r24, 0x53	; 83
 21e:	0e 94 0c 02 	call	0x418	; 0x418 <OS_SysInit>
	OS_CreateTask(&TstHandler1,task1,50,1,0,"TSK1",5);
 222:	0f 2e       	mov	r0, r31
 224:	f5 e0       	ldi	r31, 0x05	; 5
 226:	8f 2e       	mov	r8, r31
 228:	f0 2d       	mov	r31, r0
 22a:	0f 2e       	mov	r0, r31
 22c:	f6 e6       	ldi	r31, 0x66	; 102
 22e:	af 2e       	mov	r10, r31
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	bf 2e       	mov	r11, r31
 234:	f0 2d       	mov	r31, r0
 236:	c1 2c       	mov	r12, r1
 238:	d1 2c       	mov	r13, r1
 23a:	76 01       	movw	r14, r12
 23c:	01 e0       	ldi	r16, 0x01	; 1
 23e:	22 e3       	ldi	r18, 0x32	; 50
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	40 e0       	ldi	r20, 0x00	; 0
 244:	50 e0       	ldi	r21, 0x00	; 0
 246:	66 ef       	ldi	r22, 0xF6	; 246
 248:	70 e0       	ldi	r23, 0x00	; 0
 24a:	ce 01       	movw	r24, r28
 24c:	01 96       	adiw	r24, 0x01	; 1
 24e:	0e 94 29 02 	call	0x452	; 0x452 <OS_CreateTask>
	OS_CreateTask(&TstHandler2,task2,100,2,30,"TSK2",9);
 252:	0f 2e       	mov	r0, r31
 254:	f9 e0       	ldi	r31, 0x09	; 9
 256:	8f 2e       	mov	r8, r31
 258:	f0 2d       	mov	r31, r0
 25a:	0f 2e       	mov	r0, r31
 25c:	fb e6       	ldi	r31, 0x6B	; 107
 25e:	af 2e       	mov	r10, r31
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	bf 2e       	mov	r11, r31
 264:	f0 2d       	mov	r31, r0
 266:	0f 2e       	mov	r0, r31
 268:	fe e1       	ldi	r31, 0x1E	; 30
 26a:	cf 2e       	mov	r12, r31
 26c:	d1 2c       	mov	r13, r1
 26e:	e1 2c       	mov	r14, r1
 270:	f1 2c       	mov	r15, r1
 272:	f0 2d       	mov	r31, r0
 274:	02 e0       	ldi	r16, 0x02	; 2
 276:	24 e6       	ldi	r18, 0x64	; 100
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	40 e0       	ldi	r20, 0x00	; 0
 27c:	50 e0       	ldi	r21, 0x00	; 0
 27e:	6a ef       	ldi	r22, 0xFA	; 250
 280:	70 e0       	ldi	r23, 0x00	; 0
 282:	ce 01       	movw	r24, r28
 284:	03 96       	adiw	r24, 0x03	; 3
 286:	0e 94 29 02 	call	0x452	; 0x452 <OS_CreateTask>
	OS_CreateTask(&TstHandler3,task3,25,3,25,"TSK3",4);
 28a:	68 94       	set
 28c:	88 24       	eor	r8, r8
 28e:	82 f8       	bld	r8, 2
 290:	0f 2e       	mov	r0, r31
 292:	f0 e7       	ldi	r31, 0x70	; 112
 294:	af 2e       	mov	r10, r31
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	bf 2e       	mov	r11, r31
 29a:	f0 2d       	mov	r31, r0
 29c:	0f 2e       	mov	r0, r31
 29e:	f9 e1       	ldi	r31, 0x19	; 25
 2a0:	cf 2e       	mov	r12, r31
 2a2:	d1 2c       	mov	r13, r1
 2a4:	e1 2c       	mov	r14, r1
 2a6:	f1 2c       	mov	r15, r1
 2a8:	f0 2d       	mov	r31, r0
 2aa:	03 e0       	ldi	r16, 0x03	; 3
 2ac:	29 e1       	ldi	r18, 0x19	; 25
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	40 e0       	ldi	r20, 0x00	; 0
 2b2:	50 e0       	ldi	r21, 0x00	; 0
 2b4:	6e ef       	ldi	r22, 0xFE	; 254
 2b6:	70 e0       	ldi	r23, 0x00	; 0
 2b8:	ce 01       	movw	r24, r28
 2ba:	05 96       	adiw	r24, 0x05	; 5
 2bc:	0e 94 29 02 	call	0x452	; 0x452 <OS_CreateTask>

	OS_SysRun();
 2c0:	0e 94 8e 02 	call	0x51c	; 0x51c <OS_SysRun>
 2c4:	ff cf       	rjmp	.-2      	; 0x2c4 <main+0xc0>

000002c6 <OS_TaskExecute>:
		}
		free(TaskHandler);
		TaskHandler = OS_NULL;
	}
	return OS_ERR_CNT_MALLOC;
}
 2c6:	cf 93       	push	r28
 2c8:	df 93       	push	r29
 2ca:	ec 01       	movw	r28, r24
 2cc:	e9 89       	ldd	r30, Y+17	; 0x11
 2ce:	fa 89       	ldd	r31, Y+18	; 0x12
 2d0:	8f 81       	ldd	r24, Y+7	; 0x07
 2d2:	98 85       	ldd	r25, Y+8	; 0x08
 2d4:	09 95       	icall
 2d6:	1e 82       	std	Y+6, r1	; 0x06
 2d8:	89 85       	ldd	r24, Y+9	; 0x09
 2da:	9a 85       	ldd	r25, Y+10	; 0x0a
 2dc:	ab 85       	ldd	r26, Y+11	; 0x0b
 2de:	bc 85       	ldd	r27, Y+12	; 0x0c
 2e0:	8d 87       	std	Y+13, r24	; 0x0d
 2e2:	9e 87       	std	Y+14, r25	; 0x0e
 2e4:	af 87       	std	Y+15, r26	; 0x0f
 2e6:	b8 8b       	std	Y+16, r27	; 0x10
 2e8:	df 91       	pop	r29
 2ea:	cf 91       	pop	r28
 2ec:	08 95       	ret

000002ee <OS_ListInsertTask>:
 2ee:	cf 93       	push	r28
 2f0:	df 93       	push	r29
 2f2:	00 97       	sbiw	r24, 0x00	; 0
 2f4:	09 f4       	brne	.+2      	; 0x2f8 <OS_ListInsertTask+0xa>
 2f6:	44 c0       	rjmp	.+136    	; 0x380 <OS_ListInsertTask+0x92>
 2f8:	61 15       	cp	r22, r1
 2fa:	71 05       	cpc	r23, r1
 2fc:	09 f4       	brne	.+2      	; 0x300 <OS_ListInsertTask+0x12>
 2fe:	42 c0       	rjmp	.+132    	; 0x384 <OS_ListInsertTask+0x96>
 300:	ec 01       	movw	r28, r24
 302:	2c 81       	ldd	r18, Y+4	; 0x04
 304:	25 30       	cpi	r18, 0x05	; 5
 306:	0c f0       	brlt	.+2      	; 0x30a <OS_ListInsertTask+0x1c>
 308:	3f c0       	rjmp	.+126    	; 0x388 <OS_ListInsertTask+0x9a>
 30a:	2f 5f       	subi	r18, 0xFF	; 255
 30c:	2c 83       	std	Y+4, r18	; 0x04
 30e:	a8 81       	ld	r26, Y
 310:	b9 81       	ldd	r27, Y+1	; 0x01
 312:	10 97       	sbiw	r26, 0x00	; 0
 314:	49 f4       	brne	.+18     	; 0x328 <OS_ListInsertTask+0x3a>
 316:	79 83       	std	Y+1, r23	; 0x01
 318:	68 83       	st	Y, r22
 31a:	fb 01       	movw	r30, r22
 31c:	11 82       	std	Z+1, r1	; 0x01
 31e:	10 82       	st	Z, r1
 320:	13 82       	std	Z+3, r1	; 0x03
 322:	12 82       	std	Z+2, r1	; 0x02
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	31 c0       	rjmp	.+98     	; 0x38a <OS_ListInsertTask+0x9c>
 328:	eb 01       	movw	r28, r22
 32a:	9c 81       	ldd	r25, Y+4	; 0x04
 32c:	14 96       	adiw	r26, 0x04	; 4
 32e:	8c 91       	ld	r24, X
 330:	14 97       	sbiw	r26, 0x04	; 4
 332:	89 17       	cp	r24, r25
 334:	10 f4       	brcc	.+4      	; 0x33a <OS_ListInsertTask+0x4c>
 336:	16 c0       	rjmp	.+44     	; 0x364 <OS_ListInsertTask+0x76>
 338:	df 01       	movw	r26, r30
 33a:	ed 91       	ld	r30, X+
 33c:	fc 91       	ld	r31, X
 33e:	11 97       	sbiw	r26, 0x01	; 1
 340:	84 81       	ldd	r24, Z+4	; 0x04
 342:	89 17       	cp	r24, r25
 344:	18 f0       	brcs	.+6      	; 0x34c <OS_ListInsertTask+0x5e>
 346:	30 97       	sbiw	r30, 0x00	; 0
 348:	b9 f7       	brne	.-18     	; 0x338 <OS_ListInsertTask+0x4a>
 34a:	02 c0       	rjmp	.+4      	; 0x350 <OS_ListInsertTask+0x62>
 34c:	30 97       	sbiw	r30, 0x00	; 0
 34e:	69 f4       	brne	.+26     	; 0x36a <OS_ListInsertTask+0x7c>
 350:	11 96       	adiw	r26, 0x01	; 1
 352:	7c 93       	st	X, r23
 354:	6e 93       	st	-X, r22
 356:	fb 01       	movw	r30, r22
 358:	11 82       	std	Z+1, r1	; 0x01
 35a:	10 82       	st	Z, r1
 35c:	b3 83       	std	Z+3, r27	; 0x03
 35e:	a2 83       	std	Z+2, r26	; 0x02
 360:	80 e0       	ldi	r24, 0x00	; 0
 362:	13 c0       	rjmp	.+38     	; 0x38a <OS_ListInsertTask+0x9c>
 364:	fd 01       	movw	r30, r26
 366:	a0 e0       	ldi	r26, 0x00	; 0
 368:	b0 e0       	ldi	r27, 0x00	; 0
 36a:	eb 01       	movw	r28, r22
 36c:	f9 83       	std	Y+1, r31	; 0x01
 36e:	e8 83       	st	Y, r30
 370:	bb 83       	std	Y+3, r27	; 0x03
 372:	aa 83       	std	Y+2, r26	; 0x02
 374:	6d 93       	st	X+, r22
 376:	7c 93       	st	X, r23
 378:	73 83       	std	Z+3, r23	; 0x03
 37a:	62 83       	std	Z+2, r22	; 0x02
 37c:	80 e0       	ldi	r24, 0x00	; 0
 37e:	05 c0       	rjmp	.+10     	; 0x38a <OS_ListInsertTask+0x9c>
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	03 c0       	rjmp	.+6      	; 0x38a <OS_ListInsertTask+0x9c>
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	01 c0       	rjmp	.+2      	; 0x38a <OS_ListInsertTask+0x9c>
 388:	83 e0       	ldi	r24, 0x03	; 3
 38a:	df 91       	pop	r29
 38c:	cf 91       	pop	r28
 38e:	08 95       	ret

00000390 <OS_TaskTickCount>:
 390:	0f 93       	push	r16
 392:	1f 93       	push	r17
 394:	fc 01       	movw	r30, r24
 396:	45 85       	ldd	r20, Z+13	; 0x0d
 398:	56 85       	ldd	r21, Z+14	; 0x0e
 39a:	67 85       	ldd	r22, Z+15	; 0x0f
 39c:	70 89       	ldd	r23, Z+16	; 0x10
 39e:	41 50       	subi	r20, 0x01	; 1
 3a0:	51 09       	sbc	r21, r1
 3a2:	61 09       	sbc	r22, r1
 3a4:	71 09       	sbc	r23, r1
 3a6:	45 87       	std	Z+13, r20	; 0x0d
 3a8:	56 87       	std	Z+14, r21	; 0x0e
 3aa:	67 87       	std	Z+15, r22	; 0x0f
 3ac:	70 8b       	std	Z+16, r23	; 0x10
 3ae:	00 91 82 00 	lds	r16, 0x0082	; 0x800082 <OS_SysClock>
 3b2:	10 91 83 00 	lds	r17, 0x0083	; 0x800083 <OS_SysClock+0x1>
 3b6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <OS_SysClock+0x2>
 3ba:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <OS_SysClock+0x3>
 3be:	0f 5f       	subi	r16, 0xFF	; 255
 3c0:	1f 4f       	sbci	r17, 0xFF	; 255
 3c2:	2f 4f       	sbci	r18, 0xFF	; 255
 3c4:	3f 4f       	sbci	r19, 0xFF	; 255
 3c6:	00 93 82 00 	sts	0x0082, r16	; 0x800082 <OS_SysClock>
 3ca:	10 93 83 00 	sts	0x0083, r17	; 0x800083 <OS_SysClock+0x1>
 3ce:	20 93 84 00 	sts	0x0084, r18	; 0x800084 <OS_SysClock+0x2>
 3d2:	30 93 85 00 	sts	0x0085, r19	; 0x800085 <OS_SysClock+0x3>
 3d6:	45 2b       	or	r20, r21
 3d8:	46 2b       	or	r20, r22
 3da:	47 2b       	or	r20, r23
 3dc:	39 f4       	brne	.+14     	; 0x3ec <OS_TaskTickCount+0x5c>
 3de:	bc 01       	movw	r22, r24
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	86 83       	std	Z+6, r24	; 0x06
 3e4:	8d e7       	ldi	r24, 0x7D	; 125
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	0e 94 77 01 	call	0x2ee	; 0x2ee <OS_ListInsertTask>
 3ec:	1f 91       	pop	r17
 3ee:	0f 91       	pop	r16
 3f0:	08 95       	ret

000003f2 <OS_SysTick>:
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	c0 91 78 00 	lds	r28, 0x0078	; 0x800078 <OS_DlyList>
 3fa:	d0 91 79 00 	lds	r29, 0x0079	; 0x800079 <OS_DlyList+0x1>
 3fe:	20 97       	sbiw	r28, 0x00	; 0
 400:	41 f0       	breq	.+16     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 402:	ce 01       	movw	r24, r28
 404:	0e 94 c8 01 	call	0x390	; 0x390 <OS_TaskTickCount>
 408:	09 90       	ld	r0, Y+
 40a:	d8 81       	ld	r29, Y
 40c:	c0 2d       	mov	r28, r0
 40e:	20 97       	sbiw	r28, 0x00	; 0
 410:	c1 f7       	brne	.-16     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 412:	df 91       	pop	r29
 414:	cf 91       	pop	r28
 416:	08 95       	ret

00000418 <OS_SysInit>:
 418:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <OS_SysClock>
 41c:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <OS_SysClock+0x1>
 420:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <OS_SysClock+0x2>
 424:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <OS_SysClock+0x3>
 428:	ed e7       	ldi	r30, 0x7D	; 125
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	13 82       	std	Z+3, r1	; 0x03
 42e:	12 82       	std	Z+2, r1	; 0x02
 430:	11 82       	std	Z+1, r1	; 0x01
 432:	10 82       	st	Z, r1
 434:	14 82       	std	Z+4, r1	; 0x04
 436:	e8 e7       	ldi	r30, 0x78	; 120
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	13 82       	std	Z+3, r1	; 0x03
 43c:	12 82       	std	Z+2, r1	; 0x02
 43e:	11 82       	std	Z+1, r1	; 0x01
 440:	10 82       	st	Z, r1
 442:	14 82       	std	Z+4, r1	; 0x04
 444:	49 ef       	ldi	r20, 0xF9	; 249
 446:	51 e0       	ldi	r21, 0x01	; 1
 448:	68 ee       	ldi	r22, 0xE8	; 232
 44a:	73 e0       	ldi	r23, 0x03	; 3
 44c:	0e 94 49 00 	call	0x92	; 0x92 <systick_init>
 450:	08 95       	ret

00000452 <OS_CreateTask>:
 452:	2f 92       	push	r2
 454:	3f 92       	push	r3
 456:	4f 92       	push	r4
 458:	5f 92       	push	r5
 45a:	6f 92       	push	r6
 45c:	7f 92       	push	r7
 45e:	8f 92       	push	r8
 460:	9f 92       	push	r9
 462:	af 92       	push	r10
 464:	bf 92       	push	r11
 466:	cf 92       	push	r12
 468:	df 92       	push	r13
 46a:	ef 92       	push	r14
 46c:	ff 92       	push	r15
 46e:	0f 93       	push	r16
 470:	1f 93       	push	r17
 472:	cf 93       	push	r28
 474:	df 93       	push	r29
 476:	00 d0       	rcall	.+0      	; 0x478 <OS_CreateTask+0x26>
 478:	cd b7       	in	r28, 0x3d	; 61
 47a:	de b7       	in	r29, 0x3e	; 62
 47c:	9a 83       	std	Y+2, r25	; 0x02
 47e:	89 83       	std	Y+1, r24	; 0x01
 480:	3b 01       	movw	r6, r22
 482:	19 01       	movw	r2, r18
 484:	2a 01       	movw	r4, r20
 486:	90 2e       	mov	r9, r16
 488:	8c e1       	ldi	r24, 0x1C	; 28
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	0e 94 a3 02 	call	0x546	; 0x546 <malloc>
 490:	8c 01       	movw	r16, r24
 492:	00 97       	sbiw	r24, 0x00	; 0
 494:	69 f1       	breq	.+90     	; 0x4f0 <OS_CreateTask+0x9e>
 496:	fc 01       	movw	r30, r24
 498:	95 82       	std	Z+5, r9	; 0x05
 49a:	21 86       	std	Z+9, r2	; 0x09
 49c:	32 86       	std	Z+10, r3	; 0x0a
 49e:	43 86       	std	Z+11, r4	; 0x0b
 4a0:	54 86       	std	Z+12, r5	; 0x0c
 4a2:	e9 81       	ldd	r30, Y+1	; 0x01
 4a4:	fa 81       	ldd	r31, Y+2	; 0x02
 4a6:	91 83       	std	Z+1, r25	; 0x01
 4a8:	80 83       	st	Z, r24
 4aa:	fc 01       	movw	r30, r24
 4ac:	84 82       	std	Z+4, r8	; 0x04
 4ae:	72 8a       	std	Z+18, r7	; 0x12
 4b0:	61 8a       	std	Z+17, r6	; 0x11
 4b2:	d2 01       	movw	r26, r4
 4b4:	c1 01       	movw	r24, r2
 4b6:	8c 0d       	add	r24, r12
 4b8:	9d 1d       	adc	r25, r13
 4ba:	ae 1d       	adc	r26, r14
 4bc:	bf 1d       	adc	r27, r15
 4be:	85 87       	std	Z+13, r24	; 0x0d
 4c0:	96 87       	std	Z+14, r25	; 0x0e
 4c2:	a7 87       	std	Z+15, r26	; 0x0f
 4c4:	b0 8b       	std	Z+16, r27	; 0x10
 4c6:	b5 01       	movw	r22, r10
 4c8:	c8 01       	movw	r24, r16
 4ca:	43 96       	adiw	r24, 0x13	; 19
 4cc:	0e 94 c4 03 	call	0x788	; 0x788 <strcpy>
 4d0:	cd 28       	or	r12, r13
 4d2:	ce 28       	or	r12, r14
 4d4:	cf 28       	or	r12, r15
 4d6:	31 f4       	brne	.+12     	; 0x4e4 <OS_CreateTask+0x92>
 4d8:	b8 01       	movw	r22, r16
 4da:	8d e7       	ldi	r24, 0x7D	; 125
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	0e 94 77 01 	call	0x2ee	; 0x2ee <OS_ListInsertTask>
 4e2:	07 c0       	rjmp	.+14     	; 0x4f2 <OS_CreateTask+0xa0>
 4e4:	b8 01       	movw	r22, r16
 4e6:	88 e7       	ldi	r24, 0x78	; 120
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	0e 94 77 01 	call	0x2ee	; 0x2ee <OS_ListInsertTask>
 4ee:	01 c0       	rjmp	.+2      	; 0x4f2 <OS_CreateTask+0xa0>
 4f0:	85 e0       	ldi	r24, 0x05	; 5
 4f2:	0f 90       	pop	r0
 4f4:	0f 90       	pop	r0
 4f6:	df 91       	pop	r29
 4f8:	cf 91       	pop	r28
 4fa:	1f 91       	pop	r17
 4fc:	0f 91       	pop	r16
 4fe:	ff 90       	pop	r15
 500:	ef 90       	pop	r14
 502:	df 90       	pop	r13
 504:	cf 90       	pop	r12
 506:	bf 90       	pop	r11
 508:	af 90       	pop	r10
 50a:	9f 90       	pop	r9
 50c:	8f 90       	pop	r8
 50e:	7f 90       	pop	r7
 510:	6f 90       	pop	r6
 512:	5f 90       	pop	r5
 514:	4f 90       	pop	r4
 516:	3f 90       	pop	r3
 518:	2f 90       	pop	r2
 51a:	08 95       	ret

0000051c <OS_SysRun>:
	return OS_ERR_INV_PARAMS;
}
static OS_ReturnT OS_ListTraverseTop(OS_TcbListT* TcbList,OS_VoidT(*PtrFunc)(OS_VoidT* ))
{
	if ((OS_NULL != TcbList) && (OS_NULL != PtrFunc)){
		OS_Tcb* TemPtr = TcbList->PtrListHead;
 51c:	0d e7       	ldi	r16, 0x7D	; 125
 51e:	10 e0       	ldi	r17, 0x00	; 0
 520:	f8 01       	movw	r30, r16
 522:	c0 81       	ld	r28, Z
 524:	d1 81       	ldd	r29, Z+1	; 0x01
		while(OS_NULL != TemPtr){
 526:	20 97       	sbiw	r28, 0x00	; 0
 528:	d9 f3       	breq	.-10     	; 0x520 <OS_SysRun+0x4>
			(*PtrFunc)((OS_VoidT*)TemPtr);
 52a:	ce 01       	movw	r24, r28
 52c:	0e 94 63 01 	call	0x2c6	; 0x2c6 <OS_TaskExecute>
			OS_ListRemoveTask(&OS_RdyList,TemPtr);
			OS_ListInsertTask(&OS_DlyList,TemPtr);
 530:	be 01       	movw	r22, r28
 532:	88 e7       	ldi	r24, 0x78	; 120
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 94 77 01 	call	0x2ee	; 0x2ee <OS_ListInsertTask>
			TemPtr = TcbList->PtrListHead;
 53a:	f8 01       	movw	r30, r16
 53c:	c0 81       	ld	r28, Z
 53e:	d1 81       	ldd	r29, Z+1	; 0x01
}
static OS_ReturnT OS_ListTraverseTop(OS_TcbListT* TcbList,OS_VoidT(*PtrFunc)(OS_VoidT* ))
{
	if ((OS_NULL != TcbList) && (OS_NULL != PtrFunc)){
		OS_Tcb* TemPtr = TcbList->PtrListHead;
		while(OS_NULL != TemPtr){
 540:	20 97       	sbiw	r28, 0x00	; 0
 542:	99 f7       	brne	.-26     	; 0x52a <OS_SysRun+0xe>
 544:	ed cf       	rjmp	.-38     	; 0x520 <OS_SysRun+0x4>

00000546 <malloc>:
 546:	0f 93       	push	r16
 548:	1f 93       	push	r17
 54a:	cf 93       	push	r28
 54c:	df 93       	push	r29
 54e:	82 30       	cpi	r24, 0x02	; 2
 550:	91 05       	cpc	r25, r1
 552:	10 f4       	brcc	.+4      	; 0x558 <malloc+0x12>
 554:	82 e0       	ldi	r24, 0x02	; 2
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	e0 91 88 00 	lds	r30, 0x0088	; 0x800088 <__flp>
 55c:	f0 91 89 00 	lds	r31, 0x0089	; 0x800089 <__flp+0x1>
 560:	20 e0       	ldi	r18, 0x00	; 0
 562:	30 e0       	ldi	r19, 0x00	; 0
 564:	a0 e0       	ldi	r26, 0x00	; 0
 566:	b0 e0       	ldi	r27, 0x00	; 0
 568:	30 97       	sbiw	r30, 0x00	; 0
 56a:	19 f1       	breq	.+70     	; 0x5b2 <malloc+0x6c>
 56c:	40 81       	ld	r20, Z
 56e:	51 81       	ldd	r21, Z+1	; 0x01
 570:	02 81       	ldd	r16, Z+2	; 0x02
 572:	13 81       	ldd	r17, Z+3	; 0x03
 574:	48 17       	cp	r20, r24
 576:	59 07       	cpc	r21, r25
 578:	c8 f0       	brcs	.+50     	; 0x5ac <malloc+0x66>
 57a:	84 17       	cp	r24, r20
 57c:	95 07       	cpc	r25, r21
 57e:	69 f4       	brne	.+26     	; 0x59a <malloc+0x54>
 580:	10 97       	sbiw	r26, 0x00	; 0
 582:	31 f0       	breq	.+12     	; 0x590 <malloc+0x4a>
 584:	12 96       	adiw	r26, 0x02	; 2
 586:	0c 93       	st	X, r16
 588:	12 97       	sbiw	r26, 0x02	; 2
 58a:	13 96       	adiw	r26, 0x03	; 3
 58c:	1c 93       	st	X, r17
 58e:	27 c0       	rjmp	.+78     	; 0x5de <malloc+0x98>
 590:	00 93 88 00 	sts	0x0088, r16	; 0x800088 <__flp>
 594:	10 93 89 00 	sts	0x0089, r17	; 0x800089 <__flp+0x1>
 598:	22 c0       	rjmp	.+68     	; 0x5de <malloc+0x98>
 59a:	21 15       	cp	r18, r1
 59c:	31 05       	cpc	r19, r1
 59e:	19 f0       	breq	.+6      	; 0x5a6 <malloc+0x60>
 5a0:	42 17       	cp	r20, r18
 5a2:	53 07       	cpc	r21, r19
 5a4:	18 f4       	brcc	.+6      	; 0x5ac <malloc+0x66>
 5a6:	9a 01       	movw	r18, r20
 5a8:	bd 01       	movw	r22, r26
 5aa:	ef 01       	movw	r28, r30
 5ac:	df 01       	movw	r26, r30
 5ae:	f8 01       	movw	r30, r16
 5b0:	db cf       	rjmp	.-74     	; 0x568 <malloc+0x22>
 5b2:	21 15       	cp	r18, r1
 5b4:	31 05       	cpc	r19, r1
 5b6:	f9 f0       	breq	.+62     	; 0x5f6 <malloc+0xb0>
 5b8:	28 1b       	sub	r18, r24
 5ba:	39 0b       	sbc	r19, r25
 5bc:	24 30       	cpi	r18, 0x04	; 4
 5be:	31 05       	cpc	r19, r1
 5c0:	80 f4       	brcc	.+32     	; 0x5e2 <malloc+0x9c>
 5c2:	8a 81       	ldd	r24, Y+2	; 0x02
 5c4:	9b 81       	ldd	r25, Y+3	; 0x03
 5c6:	61 15       	cp	r22, r1
 5c8:	71 05       	cpc	r23, r1
 5ca:	21 f0       	breq	.+8      	; 0x5d4 <malloc+0x8e>
 5cc:	fb 01       	movw	r30, r22
 5ce:	93 83       	std	Z+3, r25	; 0x03
 5d0:	82 83       	std	Z+2, r24	; 0x02
 5d2:	04 c0       	rjmp	.+8      	; 0x5dc <malloc+0x96>
 5d4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__flp+0x1>
 5d8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__flp>
 5dc:	fe 01       	movw	r30, r28
 5de:	32 96       	adiw	r30, 0x02	; 2
 5e0:	44 c0       	rjmp	.+136    	; 0x66a <malloc+0x124>
 5e2:	fe 01       	movw	r30, r28
 5e4:	e2 0f       	add	r30, r18
 5e6:	f3 1f       	adc	r31, r19
 5e8:	81 93       	st	Z+, r24
 5ea:	91 93       	st	Z+, r25
 5ec:	22 50       	subi	r18, 0x02	; 2
 5ee:	31 09       	sbc	r19, r1
 5f0:	39 83       	std	Y+1, r19	; 0x01
 5f2:	28 83       	st	Y, r18
 5f4:	3a c0       	rjmp	.+116    	; 0x66a <malloc+0x124>
 5f6:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__brkval>
 5fa:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__brkval+0x1>
 5fe:	23 2b       	or	r18, r19
 600:	41 f4       	brne	.+16     	; 0x612 <malloc+0xcc>
 602:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 606:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 60a:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__brkval+0x1>
 60e:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__brkval>
 612:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
 616:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
 61a:	21 15       	cp	r18, r1
 61c:	31 05       	cpc	r19, r1
 61e:	41 f4       	brne	.+16     	; 0x630 <malloc+0xea>
 620:	2d b7       	in	r18, 0x3d	; 61
 622:	3e b7       	in	r19, 0x3e	; 62
 624:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 628:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 62c:	24 1b       	sub	r18, r20
 62e:	35 0b       	sbc	r19, r21
 630:	e0 91 86 00 	lds	r30, 0x0086	; 0x800086 <__brkval>
 634:	f0 91 87 00 	lds	r31, 0x0087	; 0x800087 <__brkval+0x1>
 638:	e2 17       	cp	r30, r18
 63a:	f3 07       	cpc	r31, r19
 63c:	a0 f4       	brcc	.+40     	; 0x666 <malloc+0x120>
 63e:	2e 1b       	sub	r18, r30
 640:	3f 0b       	sbc	r19, r31
 642:	28 17       	cp	r18, r24
 644:	39 07       	cpc	r19, r25
 646:	78 f0       	brcs	.+30     	; 0x666 <malloc+0x120>
 648:	ac 01       	movw	r20, r24
 64a:	4e 5f       	subi	r20, 0xFE	; 254
 64c:	5f 4f       	sbci	r21, 0xFF	; 255
 64e:	24 17       	cp	r18, r20
 650:	35 07       	cpc	r19, r21
 652:	48 f0       	brcs	.+18     	; 0x666 <malloc+0x120>
 654:	4e 0f       	add	r20, r30
 656:	5f 1f       	adc	r21, r31
 658:	50 93 87 00 	sts	0x0087, r21	; 0x800087 <__brkval+0x1>
 65c:	40 93 86 00 	sts	0x0086, r20	; 0x800086 <__brkval>
 660:	81 93       	st	Z+, r24
 662:	91 93       	st	Z+, r25
 664:	02 c0       	rjmp	.+4      	; 0x66a <malloc+0x124>
 666:	e0 e0       	ldi	r30, 0x00	; 0
 668:	f0 e0       	ldi	r31, 0x00	; 0
 66a:	cf 01       	movw	r24, r30
 66c:	df 91       	pop	r29
 66e:	cf 91       	pop	r28
 670:	1f 91       	pop	r17
 672:	0f 91       	pop	r16
 674:	08 95       	ret

00000676 <free>:
 676:	cf 93       	push	r28
 678:	df 93       	push	r29
 67a:	00 97       	sbiw	r24, 0x00	; 0
 67c:	09 f4       	brne	.+2      	; 0x680 <free+0xa>
 67e:	81 c0       	rjmp	.+258    	; 0x782 <free+0x10c>
 680:	fc 01       	movw	r30, r24
 682:	32 97       	sbiw	r30, 0x02	; 2
 684:	13 82       	std	Z+3, r1	; 0x03
 686:	12 82       	std	Z+2, r1	; 0x02
 688:	a0 91 88 00 	lds	r26, 0x0088	; 0x800088 <__flp>
 68c:	b0 91 89 00 	lds	r27, 0x0089	; 0x800089 <__flp+0x1>
 690:	10 97       	sbiw	r26, 0x00	; 0
 692:	81 f4       	brne	.+32     	; 0x6b4 <free+0x3e>
 694:	20 81       	ld	r18, Z
 696:	31 81       	ldd	r19, Z+1	; 0x01
 698:	82 0f       	add	r24, r18
 69a:	93 1f       	adc	r25, r19
 69c:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__brkval>
 6a0:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__brkval+0x1>
 6a4:	28 17       	cp	r18, r24
 6a6:	39 07       	cpc	r19, r25
 6a8:	51 f5       	brne	.+84     	; 0x6fe <free+0x88>
 6aa:	f0 93 87 00 	sts	0x0087, r31	; 0x800087 <__brkval+0x1>
 6ae:	e0 93 86 00 	sts	0x0086, r30	; 0x800086 <__brkval>
 6b2:	67 c0       	rjmp	.+206    	; 0x782 <free+0x10c>
 6b4:	ed 01       	movw	r28, r26
 6b6:	20 e0       	ldi	r18, 0x00	; 0
 6b8:	30 e0       	ldi	r19, 0x00	; 0
 6ba:	ce 17       	cp	r28, r30
 6bc:	df 07       	cpc	r29, r31
 6be:	40 f4       	brcc	.+16     	; 0x6d0 <free+0x5a>
 6c0:	4a 81       	ldd	r20, Y+2	; 0x02
 6c2:	5b 81       	ldd	r21, Y+3	; 0x03
 6c4:	9e 01       	movw	r18, r28
 6c6:	41 15       	cp	r20, r1
 6c8:	51 05       	cpc	r21, r1
 6ca:	f1 f0       	breq	.+60     	; 0x708 <free+0x92>
 6cc:	ea 01       	movw	r28, r20
 6ce:	f5 cf       	rjmp	.-22     	; 0x6ba <free+0x44>
 6d0:	d3 83       	std	Z+3, r29	; 0x03
 6d2:	c2 83       	std	Z+2, r28	; 0x02
 6d4:	40 81       	ld	r20, Z
 6d6:	51 81       	ldd	r21, Z+1	; 0x01
 6d8:	84 0f       	add	r24, r20
 6da:	95 1f       	adc	r25, r21
 6dc:	c8 17       	cp	r28, r24
 6de:	d9 07       	cpc	r29, r25
 6e0:	59 f4       	brne	.+22     	; 0x6f8 <free+0x82>
 6e2:	88 81       	ld	r24, Y
 6e4:	99 81       	ldd	r25, Y+1	; 0x01
 6e6:	84 0f       	add	r24, r20
 6e8:	95 1f       	adc	r25, r21
 6ea:	02 96       	adiw	r24, 0x02	; 2
 6ec:	91 83       	std	Z+1, r25	; 0x01
 6ee:	80 83       	st	Z, r24
 6f0:	8a 81       	ldd	r24, Y+2	; 0x02
 6f2:	9b 81       	ldd	r25, Y+3	; 0x03
 6f4:	93 83       	std	Z+3, r25	; 0x03
 6f6:	82 83       	std	Z+2, r24	; 0x02
 6f8:	21 15       	cp	r18, r1
 6fa:	31 05       	cpc	r19, r1
 6fc:	29 f4       	brne	.+10     	; 0x708 <free+0x92>
 6fe:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__flp+0x1>
 702:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__flp>
 706:	3d c0       	rjmp	.+122    	; 0x782 <free+0x10c>
 708:	e9 01       	movw	r28, r18
 70a:	fb 83       	std	Y+3, r31	; 0x03
 70c:	ea 83       	std	Y+2, r30	; 0x02
 70e:	49 91       	ld	r20, Y+
 710:	59 91       	ld	r21, Y+
 712:	c4 0f       	add	r28, r20
 714:	d5 1f       	adc	r29, r21
 716:	ec 17       	cp	r30, r28
 718:	fd 07       	cpc	r31, r29
 71a:	61 f4       	brne	.+24     	; 0x734 <free+0xbe>
 71c:	80 81       	ld	r24, Z
 71e:	91 81       	ldd	r25, Z+1	; 0x01
 720:	84 0f       	add	r24, r20
 722:	95 1f       	adc	r25, r21
 724:	02 96       	adiw	r24, 0x02	; 2
 726:	e9 01       	movw	r28, r18
 728:	99 83       	std	Y+1, r25	; 0x01
 72a:	88 83       	st	Y, r24
 72c:	82 81       	ldd	r24, Z+2	; 0x02
 72e:	93 81       	ldd	r25, Z+3	; 0x03
 730:	9b 83       	std	Y+3, r25	; 0x03
 732:	8a 83       	std	Y+2, r24	; 0x02
 734:	e0 e0       	ldi	r30, 0x00	; 0
 736:	f0 e0       	ldi	r31, 0x00	; 0
 738:	12 96       	adiw	r26, 0x02	; 2
 73a:	8d 91       	ld	r24, X+
 73c:	9c 91       	ld	r25, X
 73e:	13 97       	sbiw	r26, 0x03	; 3
 740:	00 97       	sbiw	r24, 0x00	; 0
 742:	19 f0       	breq	.+6      	; 0x74a <free+0xd4>
 744:	fd 01       	movw	r30, r26
 746:	dc 01       	movw	r26, r24
 748:	f7 cf       	rjmp	.-18     	; 0x738 <free+0xc2>
 74a:	8d 91       	ld	r24, X+
 74c:	9c 91       	ld	r25, X
 74e:	11 97       	sbiw	r26, 0x01	; 1
 750:	9d 01       	movw	r18, r26
 752:	2e 5f       	subi	r18, 0xFE	; 254
 754:	3f 4f       	sbci	r19, 0xFF	; 255
 756:	82 0f       	add	r24, r18
 758:	93 1f       	adc	r25, r19
 75a:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__brkval>
 75e:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__brkval+0x1>
 762:	28 17       	cp	r18, r24
 764:	39 07       	cpc	r19, r25
 766:	69 f4       	brne	.+26     	; 0x782 <free+0x10c>
 768:	30 97       	sbiw	r30, 0x00	; 0
 76a:	29 f4       	brne	.+10     	; 0x776 <free+0x100>
 76c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__flp+0x1>
 770:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__flp>
 774:	02 c0       	rjmp	.+4      	; 0x77a <free+0x104>
 776:	13 82       	std	Z+3, r1	; 0x03
 778:	12 82       	std	Z+2, r1	; 0x02
 77a:	b0 93 87 00 	sts	0x0087, r27	; 0x800087 <__brkval+0x1>
 77e:	a0 93 86 00 	sts	0x0086, r26	; 0x800086 <__brkval>
 782:	df 91       	pop	r29
 784:	cf 91       	pop	r28
 786:	08 95       	ret

00000788 <strcpy>:
 788:	fb 01       	movw	r30, r22
 78a:	dc 01       	movw	r26, r24
 78c:	01 90       	ld	r0, Z+
 78e:	0d 92       	st	X+, r0
 790:	00 20       	and	r0, r0
 792:	e1 f7       	brne	.-8      	; 0x78c <strcpy+0x4>
 794:	08 95       	ret

00000796 <_exit>:
 796:	f8 94       	cli

00000798 <__stop_program>:
 798:	ff cf       	rjmp	.-2      	; 0x798 <__stop_program>
